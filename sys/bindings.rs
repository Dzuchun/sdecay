/* automatically generated by rust-bindgen 0.71.1 */

#[allow(non_snake_case, non_camel_case_types, non_upper_case_globals)]
pub mod root {
    #[doc = r" If Bindgen could only determine the size and alignment of a"]
    #[doc = r" type, it is represented like this."]
    #[derive(PartialEq, Copy, Clone, Debug, Hash)]
    #[repr(C)]
    pub struct __BindgenOpaqueArray<T: Copy, const N: usize>(pub [T; N]);
    impl<T: Copy + Default, const N: usize> Default for __BindgenOpaqueArray<T, N> {
        fn default() -> Self {
            Self([<T as Default>::default(); N])
        }
    }
    #[allow(unused_imports)]
    use self::super::root;
    pub mod std {
        #[allow(unused_imports)]
        use self::super::super::root;
        pub mod __detail {
            #[allow(unused_imports)]
            use self::super::super::super::root;
        }
        #[repr(C)]
        pub struct pair {
            pub _address: u8,
        }
        pub type pair_first_type = u8;
        pub type pair_second_type = u8;
        pub type pair__PCCP = u8;
        pub type pair__PCCFP = u8;
        #[repr(C)]
        pub struct pair___zero_as_null_pointer_constant {
            pub _address: u8,
        }
        #[repr(C)]
        #[repr(align(8))]
        pub struct exception {
            pub _bindgen_opaque_blob: u64,
        }
        #[repr(C)]
        pub struct allocator {
            pub _address: u8,
        }
        pub type allocator_value_type = u8;
        pub type allocator_size_type = u64;
        pub type allocator_difference_type = u64;
        pub type allocator_pointer = u8;
        pub type allocator_const_pointer = u8;
        pub type allocator_reference = u8;
        pub type allocator_const_reference = u8;
        #[repr(C)]
        pub struct allocator_rebind {
            pub _address: u8,
        }
        pub type allocator_rebind_other = u8;
        pub type allocator_propagate_on_container_move_assignment = u8;
        pub type allocator_is_always_equal = u8;
        #[repr(C)]
        pub struct vector {
            pub _address: u8,
        }
        pub type vector__Base = u8;
        pub type vector__Tp_alloc_type = u8;
        pub type vector__Alloc_traits = u8;
        pub type vector_value_type = u8;
        pub type vector_pointer = u8;
        pub type vector_const_pointer = u8;
        pub type vector_reference = u8;
        pub type vector_const_reference = u8;
        pub type vector_iterator = u8;
        pub type vector_const_iterator = u8;
        pub type vector_const_reverse_iterator = u8;
        pub type vector_reverse_iterator = u8;
        pub type vector_size_type = u64;
        pub type vector_difference_type = u64;
        pub type vector_allocator_type = u8;
        #[repr(C)]
        pub struct vector__Guard_alloc {
            pub _address: u8,
        }
        #[repr(C)]
        pub struct vector__Temporary_value {
            pub _address: u8,
        }
        #[repr(C)]
        #[repr(align(1))]
        pub struct vector__Temporary_value__Storage {
            pub _bindgen_opaque_blob: u8,
        }
        pub type string = root::__BindgenOpaqueArray<u64, 4usize>;
        #[repr(C)]
        pub struct default_delete {
            pub _address: u8,
        }
        #[repr(C)]
        pub struct unique_ptr {
            pub _address: u8,
        }
        pub type unique_ptr__DeleterConstraint = u8;
        pub type unique_ptr_pointer = u8;
        pub type unique_ptr_element_type = u8;
        pub type unique_ptr_deleter_type = u8;
        pub type unique_ptr___safe_conversion_up = u8;
    }
    pub mod __gnu_cxx {
        #[allow(unused_imports)]
        use self::super::super::root;
    }
    pub mod rapidxml {
        #[allow(unused_imports)]
        use self::super::super::root;
        #[repr(C)]
        pub struct xml_node {
            pub _address: u8,
        }
    }
    pub mod SandiaDecay {
        #[allow(unused_imports)]
        use self::super::super::root;
        pub mod ProductType {
            pub type Type = ::core::ffi::c_uint;
            pub const BetaParticle: Type = 0;
            pub const GammaParticle: Type = 1;
            pub const AlphaParticle: Type = 2;
            pub const PositronParticle: Type = 3;
            pub const CaptureElectronParticle: Type = 4;
            pub const XrayParticle: Type = 5;
        }
        pub mod DecayMode {
            pub type Type = ::core::ffi::c_uint;
            pub const AlphaDecay: Type = 0;
            pub const BetaDecay: Type = 1;
            pub const BetaPlusDecay: Type = 2;
            pub const ProtonDecay: Type = 3;
            pub const IsometricTransitionDecay: Type = 4;
            pub const BetaAndNeutronDecay: Type = 5;
            pub const BetaAndTwoNeutronDecay: Type = 6;
            pub const ElectronCaptureDecay: Type = 7;
            pub const ElectronCaptureAndProtonDecay: Type = 8;
            pub const ElectronCaptureAndAlphaDecay: Type = 9;
            pub const ElectronCaptureAndTwoProtonDecay: Type = 10;
            pub const BetaAndAlphaDecay: Type = 11;
            pub const BetaPlusAndProtonDecay: Type = 12;
            pub const BetaPlusAndTwoProtonDecay: Type = 13;
            pub const BetaPlusAndThreeProtonDecay: Type = 14;
            pub const BetaPlusAndAlphaDecay: Type = 15;
            pub const DoubleBetaDecay: Type = 16;
            pub const DoubleElectronCaptureDecay: Type = 17;
            pub const Carbon14Decay: Type = 18;
            pub const SpontaneousFissionDecay: Type = 19;
            pub const ClusterDecay: Type = 20;
            pub const DoubleProton: Type = 21;
            pub const UndefinedDecay: Type = 22;
        }
        pub mod ForbiddennessType {
            pub type Type = ::core::ffi::c_uint;
            pub const NoForbiddenness: Type = 0;
            pub const FirstForbidden: Type = 1;
            pub const FirstUniqueForbidden: Type = 2;
            pub const SecondForbidden: Type = 3;
            pub const SecondUniqueForbidden: Type = 4;
            pub const ThirdForbidden: Type = 5;
            pub const ThirdUniqueForbidden: Type = 6;
            pub const FourthForbidden: Type = 7;
        }
        pub const second: f64 = 1.0;
        pub const hour: f64 = 3600.0;
        pub const day: f64 = 86400.0;
        pub const year: f64 = 31556952.0;
        pub const month: f64 = 2629746.0;
        pub const becquerel: f64 = 1.0;
        pub const curie: f64 = 37000000000.0;
        pub const Bq: f64 = 1.0;
        pub const MBq: f64 = 1000000.0;
        pub const Ci: f64 = 37000000000.0;
        pub const keV: f64 = 1.0;
        pub const eV: f64 = 0.001;
        pub const MeV: f64 = 1000.0;
        pub const mm: f64 = 1.0;
        pub const cm: f64 = 10.0;
        pub const meter: f64 = 1000.0;
        pub const m: f64 = 1000.0;
        pub const cm2: f64 = 100.0;
        pub const cm3: f64 = 1000.0;
        pub type CalcFloatType = f64;
        #[repr(C)]
        pub struct NuclideAbundancePair {
            pub nuclide: *const root::SandiaDecay::Nuclide,
            pub abundance: f64,
        }
        #[repr(C)]
        pub struct EnergyIntensityPair {
            pub energy: f64,
            pub intensity: f64,
        }
        #[repr(C)]
        pub struct EnergyRatePair {
            pub energy: f64,
            pub numPerSecond: f64,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay14EnergyRatePair22moreThanByNumPerSecondERKS0_S2_"]
            pub fn EnergyRatePair_moreThanByNumPerSecond(
                lhs: *const root::SandiaDecay::EnergyRatePair,
                rhs: *const root::SandiaDecay::EnergyRatePair,
            ) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay14EnergyRatePair16lessThanByEnergyERKS0_S2_"]
            pub fn EnergyRatePair_lessThanByEnergy(
                lhs: *const root::SandiaDecay::EnergyRatePair,
                rhs: *const root::SandiaDecay::EnergyRatePair,
            ) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay14EnergyRatePairC1Edd"]
            pub fn EnergyRatePair_EnergyRatePair(
                this: *mut root::SandiaDecay::EnergyRatePair,
                _numPerSecond: f64,
                _energy: f64,
            );
        }
        impl EnergyRatePair {
            #[inline]
            pub unsafe fn moreThanByNumPerSecond(
                lhs: *const root::SandiaDecay::EnergyRatePair,
                rhs: *const root::SandiaDecay::EnergyRatePair,
            ) -> bool {
                EnergyRatePair_moreThanByNumPerSecond(lhs, rhs)
            }
            #[inline]
            pub unsafe fn lessThanByEnergy(
                lhs: *const root::SandiaDecay::EnergyRatePair,
                rhs: *const root::SandiaDecay::EnergyRatePair,
            ) -> bool {
                EnergyRatePair_lessThanByEnergy(lhs, rhs)
            }
            #[inline]
            pub unsafe fn new(_numPerSecond: f64, _energy: f64) -> Self {
                let mut __bindgen_tmp = ::core::mem::MaybeUninit::uninit();
                EnergyRatePair_EnergyRatePair(__bindgen_tmp.as_mut_ptr(), _numPerSecond, _energy);
                __bindgen_tmp.assume_init()
            }
        }
        #[repr(C)]
        pub struct EnergyCountPair {
            pub energy: f64,
            pub count: f64,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay15EnergyCountPair15moreThanByCountERKS0_S2_"]
            pub fn EnergyCountPair_moreThanByCount(
                lhs: *const root::SandiaDecay::EnergyCountPair,
                rhs: *const root::SandiaDecay::EnergyCountPair,
            ) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay15EnergyCountPair16lessThanByEnergyERKS0_S2_"]
            pub fn EnergyCountPair_lessThanByEnergy(
                lhs: *const root::SandiaDecay::EnergyCountPair,
                rhs: *const root::SandiaDecay::EnergyCountPair,
            ) -> bool;
        }
        impl EnergyCountPair {
            #[inline]
            pub unsafe fn moreThanByCount(
                lhs: *const root::SandiaDecay::EnergyCountPair,
                rhs: *const root::SandiaDecay::EnergyCountPair,
            ) -> bool {
                EnergyCountPair_moreThanByCount(lhs, rhs)
            }
            #[inline]
            pub unsafe fn lessThanByEnergy(
                lhs: *const root::SandiaDecay::EnergyCountPair,
                rhs: *const root::SandiaDecay::EnergyCountPair,
            ) -> bool {
                EnergyCountPair_lessThanByEnergy(lhs, rhs)
            }
        }
        #[repr(C)]
        pub struct NuclideNumAtomsPair {
            pub nuclide: *const root::SandiaDecay::Nuclide,
            pub numAtoms: root::SandiaDecay::CalcFloatType,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay19NuclideNumAtomsPairC1EPKNS_7NuclideEd"]
            pub fn NuclideNumAtomsPair_NuclideNumAtomsPair(
                this: *mut root::SandiaDecay::NuclideNumAtomsPair,
                _nuclide: *const root::SandiaDecay::Nuclide,
                _numAtoms: root::SandiaDecay::CalcFloatType,
            );
        }
        impl NuclideNumAtomsPair {
            #[inline]
            pub unsafe fn new(
                _nuclide: *const root::SandiaDecay::Nuclide,
                _numAtoms: root::SandiaDecay::CalcFloatType,
            ) -> Self {
                let mut __bindgen_tmp = ::core::mem::MaybeUninit::uninit();
                NuclideNumAtomsPair_NuclideNumAtomsPair(
                    __bindgen_tmp.as_mut_ptr(),
                    _nuclide,
                    _numAtoms,
                );
                __bindgen_tmp.assume_init()
            }
        }
        #[repr(C)]
        pub struct NuclideActivityPair {
            pub nuclide: *const root::SandiaDecay::Nuclide,
            pub activity: root::SandiaDecay::CalcFloatType,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay19NuclideActivityPairC1EPKNS_7NuclideEd"]
            pub fn NuclideActivityPair_NuclideActivityPair(
                this: *mut root::SandiaDecay::NuclideActivityPair,
                _nuclide: *const root::SandiaDecay::Nuclide,
                _activity: root::SandiaDecay::CalcFloatType,
            );
        }
        impl NuclideActivityPair {
            #[inline]
            pub unsafe fn new(
                _nuclide: *const root::SandiaDecay::Nuclide,
                _activity: root::SandiaDecay::CalcFloatType,
            ) -> Self {
                let mut __bindgen_tmp = ::core::mem::MaybeUninit::uninit();
                NuclideActivityPair_NuclideActivityPair(
                    __bindgen_tmp.as_mut_ptr(),
                    _nuclide,
                    _activity,
                );
                __bindgen_tmp.assume_init()
            }
        }
        #[repr(C)]
        pub struct SandiaDecayDataBase {
            pub m_nuclides: root::__BindgenOpaqueArray<u64, 3usize>,
            pub m_elements: root::__BindgenOpaqueArray<u64, 3usize>,
            pub m_elementStore: root::__BindgenOpaqueArray<u64, 3usize>,
            pub m_nuclideStore: root::__BindgenOpaqueArray<u64, 3usize>,
            pub m_transitionStore: root::__BindgenOpaqueArray<u64, 3usize>,
            pub m_xmlFileContainedDecayXrays: bool,
            pub m_xmlFileContainedElementalXrays: bool,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay19SandiaDecayDataBase11initializedEv"]
            pub fn SandiaDecayDataBase_initialized(
                this: *const root::SandiaDecay::SandiaDecayDataBase,
            ) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay19SandiaDecayDataBase10initializeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"]
            pub fn SandiaDecayDataBase_initialize(
                this: *mut root::SandiaDecay::SandiaDecayDataBase,
                sandia_decay_xml_filename: *const root::std::string,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay19SandiaDecayDataBase10initializeERSt6vectorIcSaIcEE"]
            pub fn SandiaDecayDataBase_initialize1(
                this: *mut root::SandiaDecay::SandiaDecayDataBase,
                data: *mut root::__BindgenOpaqueArray<u64, 3usize>,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay19SandiaDecayDataBase5resetEv"]
            pub fn SandiaDecayDataBase_reset(this: *mut root::SandiaDecay::SandiaDecayDataBase);
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay19SandiaDecayDataBase25xmlContainedDecayXRayInfoEv"]
            pub fn SandiaDecayDataBase_xmlContainedDecayXRayInfo(
                this: *const root::SandiaDecay::SandiaDecayDataBase,
            ) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay19SandiaDecayDataBase29xmlContainedElementalXRayInfoEv"]
            pub fn SandiaDecayDataBase_xmlContainedElementalXRayInfo(
                this: *const root::SandiaDecay::SandiaDecayDataBase,
            ) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay19SandiaDecayDataBase7memsizeEv"]
            pub fn SandiaDecayDataBase_memsize(
                this: *const root::SandiaDecay::SandiaDecayDataBase,
            ) -> usize;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay19SandiaDecayDataBase7nuclideERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"]
            pub fn SandiaDecayDataBase_nuclide(
                this: *const root::SandiaDecay::SandiaDecayDataBase,
                label: *const root::std::string,
            ) -> *const root::SandiaDecay::Nuclide;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay19SandiaDecayDataBase7nuclideEiii"]
            pub fn SandiaDecayDataBase_nuclide1(
                this: *const root::SandiaDecay::SandiaDecayDataBase,
                z: ::core::ffi::c_int,
                massNumber: ::core::ffi::c_int,
                iso: ::core::ffi::c_int,
            ) -> *const root::SandiaDecay::Nuclide;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay19SandiaDecayDataBase16nuclideUncheckedERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"]
            pub fn SandiaDecayDataBase_nuclideUnchecked(
                this: *const root::SandiaDecay::SandiaDecayDataBase,
                symbol: *const root::std::string,
            ) -> *const root::SandiaDecay::Nuclide;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay19SandiaDecayDataBase8nuclidesEPKNS_7ElementE"]
            pub fn SandiaDecayDataBase_nuclides(
                this: *const root::SandiaDecay::SandiaDecayDataBase,
                element: *const root::SandiaDecay::Element,
            ) -> root::__BindgenOpaqueArray<u64, 3usize>;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay19SandiaDecayDataBase8nuclidesERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"]
            pub fn SandiaDecayDataBase_nuclides1(
                this: *const root::SandiaDecay::SandiaDecayDataBase,
                element: *const root::std::string,
            ) -> root::__BindgenOpaqueArray<u64, 3usize>;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay19SandiaDecayDataBase7elementEi"]
            pub fn SandiaDecayDataBase_element(
                this: *const root::SandiaDecay::SandiaDecayDataBase,
                atomicNumber: ::core::ffi::c_int,
            ) -> *const root::SandiaDecay::Element;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay19SandiaDecayDataBase7elementERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"]
            pub fn SandiaDecayDataBase_element1(
                this: *const root::SandiaDecay::SandiaDecayDataBase,
                label: *const root::std::string,
            ) -> *const root::SandiaDecay::Element;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay19SandiaDecayDataBase18toNormalSymbolFormERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"]
            pub fn SandiaDecayDataBase_toNormalSymbolForm(
                this: *const root::SandiaDecay::SandiaDecayDataBase,
                symbol: *const root::std::string,
            ) -> root::std::string;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay19SandiaDecayDataBase8nuclidesEv"]
            pub fn SandiaDecayDataBase_nuclides2(
                this: *const root::SandiaDecay::SandiaDecayDataBase,
            ) -> *const root::__BindgenOpaqueArray<u64, 3usize>;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay19SandiaDecayDataBase8elementsEv"]
            pub fn SandiaDecayDataBase_elements(
                this: *const root::SandiaDecay::SandiaDecayDataBase,
            ) -> *const root::__BindgenOpaqueArray<u64, 3usize>;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay19SandiaDecayDataBase11transitionsEv"]
            pub fn SandiaDecayDataBase_transitions(
                this: *const root::SandiaDecay::SandiaDecayDataBase,
            ) -> *const root::__BindgenOpaqueArray<u64, 3usize>;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay19SandiaDecayDataBase5decayEPKNS_7NuclideEdd"]
            pub fn SandiaDecayDataBase_decay(
                parent: *const root::SandiaDecay::Nuclide,
                orignal_activity: root::SandiaDecay::CalcFloatType,
                time_in_seconds: f64,
            ) -> root::__BindgenOpaqueArray<u64, 3usize>;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay19SandiaDecayDataBase5decayERKSt6vectorINS_19NuclideNumAtomsPairESaIS2_EEd"]
            pub fn SandiaDecayDataBase_decay1(
                parents: *const root::__BindgenOpaqueArray<u64, 3usize>,
                time: f64,
            ) -> root::__BindgenOpaqueArray<u64, 3usize>;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay19SandiaDecayDataBase5decayERKSt6vectorINS_19NuclideActivityPairESaIS2_EEd"]
            pub fn SandiaDecayDataBase_decay2(
                parents: *const root::__BindgenOpaqueArray<u64, 3usize>,
                time: f64,
            ) -> root::__BindgenOpaqueArray<u64, 3usize>;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay19SandiaDecayDataBase16getTimeEvolutionEPKNS_7NuclideEd"]
            pub fn SandiaDecayDataBase_getTimeEvolution(
                parent: *const root::SandiaDecay::Nuclide,
                orignal_activity: root::SandiaDecay::CalcFloatType,
            ) -> root::__BindgenOpaqueArray<u64, 3usize>;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay19SandiaDecayDataBase16getTimeEvolutionERKSt6vectorINS_19NuclideNumAtomsPairESaIS2_EE"]
            pub fn SandiaDecayDataBase_getTimeEvolution1(
                parents: *const root::__BindgenOpaqueArray<u64, 3usize>,
            ) -> root::__BindgenOpaqueArray<u64, 3usize>;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay19SandiaDecayDataBase16getTimeEvolutionERKSt6vectorINS_19NuclideActivityPairESaIS2_EE"]
            pub fn SandiaDecayDataBase_getTimeEvolution2(
                parents: *const root::__BindgenOpaqueArray<u64, 3usize>,
            ) -> root::__BindgenOpaqueArray<u64, 3usize>;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay19SandiaDecayDataBaseC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"]
            pub fn SandiaDecayDataBase_SandiaDecayDataBase(
                this: *mut root::SandiaDecay::SandiaDecayDataBase,
                sandia_decay_xml_filename: *const root::std::string,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay19SandiaDecayDataBaseC1Ev"]
            pub fn SandiaDecayDataBase_SandiaDecayDataBase1(
                this: *mut root::SandiaDecay::SandiaDecayDataBase,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay19SandiaDecayDataBaseD1Ev"]
            pub fn SandiaDecayDataBase_SandiaDecayDataBase_destructor(
                this: *mut root::SandiaDecay::SandiaDecayDataBase,
            );
        }
        impl SandiaDecayDataBase {
            #[inline]
            pub unsafe fn initialized(&self) -> bool {
                SandiaDecayDataBase_initialized(self)
            }
            #[inline]
            pub unsafe fn initialize(
                &mut self,
                sandia_decay_xml_filename: *const root::std::string,
            ) {
                SandiaDecayDataBase_initialize(self, sandia_decay_xml_filename)
            }
            #[inline]
            pub unsafe fn initialize1(
                &mut self,
                data: *mut root::__BindgenOpaqueArray<u64, 3usize>,
            ) {
                SandiaDecayDataBase_initialize1(self, data)
            }
            #[inline]
            pub unsafe fn reset(&mut self) {
                SandiaDecayDataBase_reset(self)
            }
            #[inline]
            pub unsafe fn xmlContainedDecayXRayInfo(&self) -> bool {
                SandiaDecayDataBase_xmlContainedDecayXRayInfo(self)
            }
            #[inline]
            pub unsafe fn xmlContainedElementalXRayInfo(&self) -> bool {
                SandiaDecayDataBase_xmlContainedElementalXRayInfo(self)
            }
            #[inline]
            pub unsafe fn memsize(&self) -> usize {
                SandiaDecayDataBase_memsize(self)
            }
            #[inline]
            pub unsafe fn nuclide(
                &self,
                label: *const root::std::string,
            ) -> *const root::SandiaDecay::Nuclide {
                SandiaDecayDataBase_nuclide(self, label)
            }
            #[inline]
            pub unsafe fn nuclide1(
                &self,
                z: ::core::ffi::c_int,
                massNumber: ::core::ffi::c_int,
                iso: ::core::ffi::c_int,
            ) -> *const root::SandiaDecay::Nuclide {
                SandiaDecayDataBase_nuclide1(self, z, massNumber, iso)
            }
            #[inline]
            pub unsafe fn nuclideUnchecked(
                &self,
                symbol: *const root::std::string,
            ) -> *const root::SandiaDecay::Nuclide {
                SandiaDecayDataBase_nuclideUnchecked(self, symbol)
            }
            #[inline]
            pub unsafe fn nuclides(
                &self,
                element: *const root::SandiaDecay::Element,
            ) -> root::__BindgenOpaqueArray<u64, 3usize> {
                SandiaDecayDataBase_nuclides(self, element)
            }
            #[inline]
            pub unsafe fn nuclides1(
                &self,
                element: *const root::std::string,
            ) -> root::__BindgenOpaqueArray<u64, 3usize> {
                SandiaDecayDataBase_nuclides1(self, element)
            }
            #[inline]
            pub unsafe fn element(
                &self,
                atomicNumber: ::core::ffi::c_int,
            ) -> *const root::SandiaDecay::Element {
                SandiaDecayDataBase_element(self, atomicNumber)
            }
            #[inline]
            pub unsafe fn element1(
                &self,
                label: *const root::std::string,
            ) -> *const root::SandiaDecay::Element {
                SandiaDecayDataBase_element1(self, label)
            }
            #[inline]
            pub unsafe fn toNormalSymbolForm(
                &self,
                symbol: *const root::std::string,
            ) -> root::std::string {
                SandiaDecayDataBase_toNormalSymbolForm(self, symbol)
            }
            #[inline]
            pub unsafe fn nuclides2(&self) -> *const root::__BindgenOpaqueArray<u64, 3usize> {
                SandiaDecayDataBase_nuclides2(self)
            }
            #[inline]
            pub unsafe fn elements(&self) -> *const root::__BindgenOpaqueArray<u64, 3usize> {
                SandiaDecayDataBase_elements(self)
            }
            #[inline]
            pub unsafe fn transitions(&self) -> *const root::__BindgenOpaqueArray<u64, 3usize> {
                SandiaDecayDataBase_transitions(self)
            }
            #[inline]
            pub unsafe fn decay(
                parent: *const root::SandiaDecay::Nuclide,
                orignal_activity: root::SandiaDecay::CalcFloatType,
                time_in_seconds: f64,
            ) -> root::__BindgenOpaqueArray<u64, 3usize> {
                SandiaDecayDataBase_decay(parent, orignal_activity, time_in_seconds)
            }
            #[inline]
            pub unsafe fn decay1(
                parents: *const root::__BindgenOpaqueArray<u64, 3usize>,
                time: f64,
            ) -> root::__BindgenOpaqueArray<u64, 3usize> {
                SandiaDecayDataBase_decay1(parents, time)
            }
            #[inline]
            pub unsafe fn decay2(
                parents: *const root::__BindgenOpaqueArray<u64, 3usize>,
                time: f64,
            ) -> root::__BindgenOpaqueArray<u64, 3usize> {
                SandiaDecayDataBase_decay2(parents, time)
            }
            #[inline]
            pub unsafe fn getTimeEvolution(
                parent: *const root::SandiaDecay::Nuclide,
                orignal_activity: root::SandiaDecay::CalcFloatType,
            ) -> root::__BindgenOpaqueArray<u64, 3usize> {
                SandiaDecayDataBase_getTimeEvolution(parent, orignal_activity)
            }
            #[inline]
            pub unsafe fn getTimeEvolution1(
                parents: *const root::__BindgenOpaqueArray<u64, 3usize>,
            ) -> root::__BindgenOpaqueArray<u64, 3usize> {
                SandiaDecayDataBase_getTimeEvolution1(parents)
            }
            #[inline]
            pub unsafe fn getTimeEvolution2(
                parents: *const root::__BindgenOpaqueArray<u64, 3usize>,
            ) -> root::__BindgenOpaqueArray<u64, 3usize> {
                SandiaDecayDataBase_getTimeEvolution2(parents)
            }
            #[inline]
            pub unsafe fn new(sandia_decay_xml_filename: *const root::std::string) -> Self {
                let mut __bindgen_tmp = ::core::mem::MaybeUninit::uninit();
                SandiaDecayDataBase_SandiaDecayDataBase(
                    __bindgen_tmp.as_mut_ptr(),
                    sandia_decay_xml_filename,
                );
                __bindgen_tmp.assume_init()
            }
            #[inline]
            pub unsafe fn new1() -> Self {
                let mut __bindgen_tmp = ::core::mem::MaybeUninit::uninit();
                SandiaDecayDataBase_SandiaDecayDataBase1(__bindgen_tmp.as_mut_ptr());
                __bindgen_tmp.assume_init()
            }
            #[inline]
            pub unsafe fn destruct(&mut self) {
                SandiaDecayDataBase_SandiaDecayDataBase_destructor(self)
            }
        }
        #[repr(C)]
        pub struct NuclideMixture__bindgen_vtable(::core::ffi::c_void);
        #[repr(C)]
        pub struct NuclideMixture {
            pub vtable_: *const NuclideMixture__bindgen_vtable,
            pub m_originalNuclides: root::__BindgenOpaqueArray<u64, 3usize>,
            pub m_decayedToNuclides: root::__BindgenOpaqueArray<u64, 3usize>,
        }
        pub mod NuclideMixture_HowToOrder {
            pub type Type = ::core::ffi::c_uint;
            pub const OrderByAbundance: Type = 0;
            pub const OrderByEnergy: Type = 1;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay14NuclideMixture5clearEv"]
            pub fn NuclideMixture_clear(this: *mut root::SandiaDecay::NuclideMixture);
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay14NuclideMixture21addNuclideByAbundanceEPKNS_7NuclideEd"]
            pub fn NuclideMixture_addNuclideByAbundance(
                this: *mut root::SandiaDecay::NuclideMixture,
                nuclide: *const root::SandiaDecay::Nuclide,
                num_init_atom: root::SandiaDecay::CalcFloatType,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay14NuclideMixture20addNuclideByActivityEPKNS_7NuclideEd"]
            pub fn NuclideMixture_addNuclideByActivity(
                this: *mut root::SandiaDecay::NuclideMixture,
                nuclide: *const root::SandiaDecay::Nuclide,
                activity: root::SandiaDecay::CalcFloatType,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay14NuclideMixture10addNuclideERKNS_19NuclideNumAtomsPairE"]
            pub fn NuclideMixture_addNuclide(
                this: *mut root::SandiaDecay::NuclideMixture,
                nucide: *const root::SandiaDecay::NuclideNumAtomsPair,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay14NuclideMixture10addNuclideERKNS_19NuclideActivityPairE"]
            pub fn NuclideMixture_addNuclide1(
                this: *mut root::SandiaDecay::NuclideMixture,
                nucide: *const root::SandiaDecay::NuclideActivityPair,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay14NuclideMixture24addAgedNuclideByActivityEPKNS_7NuclideEdd"]
            pub fn NuclideMixture_addAgedNuclideByActivity(
                this: *mut root::SandiaDecay::NuclideMixture,
                nuclide: *const root::SandiaDecay::Nuclide,
                activity: root::SandiaDecay::CalcFloatType,
                age_in_seconds: f64,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay14NuclideMixture24addAgedNuclideByNumAtomsEPKNS_7NuclideEdd"]
            pub fn NuclideMixture_addAgedNuclideByNumAtoms(
                this: *mut root::SandiaDecay::NuclideMixture,
                nuclide: *const root::SandiaDecay::Nuclide,
                number_atoms: root::SandiaDecay::CalcFloatType,
                age_in_seconds: f64,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay14NuclideMixture30addNuclideInSecularEquilibriumEPKNS_7NuclideEd"]
            pub fn NuclideMixture_addNuclideInSecularEquilibrium(
                this: *mut root::SandiaDecay::NuclideMixture,
                parent: *const root::SandiaDecay::Nuclide,
                parent_activity: root::SandiaDecay::CalcFloatType,
            ) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay14NuclideMixture29addNuclideInPromptEquilibriumEPKNS_7NuclideEd"]
            pub fn NuclideMixture_addNuclideInPromptEquilibrium(
                this: *mut root::SandiaDecay::NuclideMixture,
                parent: *const root::SandiaDecay::Nuclide,
                parent_activity: root::SandiaDecay::CalcFloatType,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture19numSolutionNuclidesEv"]
            pub fn NuclideMixture_numSolutionNuclides(
                this: *const root::SandiaDecay::NuclideMixture,
            ) -> ::core::ffi::c_int;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture8activityEdPKNS_7NuclideE"]
            pub fn NuclideMixture_activity(
                this: *const root::SandiaDecay::NuclideMixture,
                time: f64,
                nuclide: *const root::SandiaDecay::Nuclide,
            ) -> root::SandiaDecay::CalcFloatType;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture8activityEdRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"]
            pub fn NuclideMixture_activity1(
                this: *const root::SandiaDecay::NuclideMixture,
                time: f64,
                symbol: *const root::std::string,
            ) -> root::SandiaDecay::CalcFloatType;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture8activityEdiii"]
            pub fn NuclideMixture_activity2(
                this: *const root::SandiaDecay::NuclideMixture,
                time: f64,
                z: ::core::ffi::c_int,
                atomic_mass: ::core::ffi::c_int,
                iso: ::core::ffi::c_int,
            ) -> root::SandiaDecay::CalcFloatType;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture8activityEdi"]
            pub fn NuclideMixture_activity3(
                this: *const root::SandiaDecay::NuclideMixture,
                time: f64,
                internal_index_number: ::core::ffi::c_int,
            ) -> root::SandiaDecay::CalcFloatType;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture8activityEd"]
            pub fn NuclideMixture_activity4(
                this: *const root::SandiaDecay::NuclideMixture,
                time_in_seconds: f64,
            ) -> root::__BindgenOpaqueArray<u64, 3usize>;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture8numAtomsEdPKNS_7NuclideE"]
            pub fn NuclideMixture_numAtoms(
                this: *const root::SandiaDecay::NuclideMixture,
                time: f64,
                nuclide: *const root::SandiaDecay::Nuclide,
            ) -> root::SandiaDecay::CalcFloatType;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture8numAtomsEdRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"]
            pub fn NuclideMixture_numAtoms1(
                this: *const root::SandiaDecay::NuclideMixture,
                time: f64,
                symbol: *const root::std::string,
            ) -> root::SandiaDecay::CalcFloatType;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture8numAtomsEdiii"]
            pub fn NuclideMixture_numAtoms2(
                this: *const root::SandiaDecay::NuclideMixture,
                time: f64,
                z: ::core::ffi::c_int,
                atomic_mass: ::core::ffi::c_int,
                iso: ::core::ffi::c_int,
            ) -> root::SandiaDecay::CalcFloatType;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture8numAtomsEdi"]
            pub fn NuclideMixture_numAtoms3(
                this: *const root::SandiaDecay::NuclideMixture,
                time: f64,
                internal_index_number: ::core::ffi::c_int,
            ) -> root::SandiaDecay::CalcFloatType;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture8numAtomsEd"]
            pub fn NuclideMixture_numAtoms4(
                this: *const root::SandiaDecay::NuclideMixture,
                time_in_seconds: f64,
            ) -> root::__BindgenOpaqueArray<u64, 3usize>;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture13totalActivityEd"]
            pub fn NuclideMixture_totalActivity(
                this: *const root::SandiaDecay::NuclideMixture,
                time: f64,
            ) -> root::SandiaDecay::CalcFloatType;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture16totalMassInGramsEd"]
            pub fn NuclideMixture_totalMassInGrams(
                this: *const root::SandiaDecay::NuclideMixture,
                time: f64,
            ) -> root::SandiaDecay::CalcFloatType;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture6gammasEdNS0_10HowToOrderEb"]
            pub fn NuclideMixture_gammas(
                this: *const root::SandiaDecay::NuclideMixture,
                time: f64,
                sortType: root::SandiaDecay::NuclideMixture_HowToOrder::Type,
                includeAnihilationGammas: bool,
            ) -> root::__BindgenOpaqueArray<u64, 3usize>;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture6alphasEdNS0_10HowToOrderE"]
            pub fn NuclideMixture_alphas(
                this: *const root::SandiaDecay::NuclideMixture,
                time: f64,
                sortType: root::SandiaDecay::NuclideMixture_HowToOrder::Type,
            ) -> root::__BindgenOpaqueArray<u64, 3usize>;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture5betasEdNS0_10HowToOrderE"]
            pub fn NuclideMixture_betas(
                this: *const root::SandiaDecay::NuclideMixture,
                time: f64,
                sortType: root::SandiaDecay::NuclideMixture_HowToOrder::Type,
            ) -> root::__BindgenOpaqueArray<u64, 3usize>;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture11betaPlussesEdNS0_10HowToOrderE"]
            pub fn NuclideMixture_betaPlusses(
                this: *const root::SandiaDecay::NuclideMixture,
                time: f64,
                sortType: root::SandiaDecay::NuclideMixture_HowToOrder::Type,
            ) -> root::__BindgenOpaqueArray<u64, 3usize>;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture5xraysEdNS0_10HowToOrderE"]
            pub fn NuclideMixture_xrays(
                this: *const root::SandiaDecay::NuclideMixture,
                time: f64,
                sortType: root::SandiaDecay::NuclideMixture_HowToOrder::Type,
            ) -> root::__BindgenOpaqueArray<u64, 3usize>;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture7photonsEdNS0_10HowToOrderE"]
            pub fn NuclideMixture_photons(
                this: *const root::SandiaDecay::NuclideMixture,
                time: f64,
                sortType: root::SandiaDecay::NuclideMixture_HowToOrder::Type,
            ) -> root::__BindgenOpaqueArray<u64, 3usize>;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture13decayParticleEdNS_11ProductTypeENS0_10HowToOrderE"]
            pub fn NuclideMixture_decayParticle(
                this: *const root::SandiaDecay::NuclideMixture,
                time: f64,
                type_: root::SandiaDecay::ProductType::Type,
                sortType: root::SandiaDecay::NuclideMixture_HowToOrder::Type,
            ) -> root::__BindgenOpaqueArray<u64, 3usize>;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture24decayParticlesInIntervalEddNS_11ProductTypeENS0_10HowToOrderEm"]
            pub fn NuclideMixture_decayParticlesInInterval(
                this: *const root::SandiaDecay::NuclideMixture,
                initial_age: f64,
                interval_duration: f64,
                type_: root::SandiaDecay::ProductType::Type,
                sort_type: root::SandiaDecay::NuclideMixture_HowToOrder::Type,
                characteristic_time_slices: usize,
            ) -> root::__BindgenOpaqueArray<u64, 3usize>;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture21decayGammasInIntervalEddbNS0_10HowToOrderEm"]
            pub fn NuclideMixture_decayGammasInInterval(
                this: *const root::SandiaDecay::NuclideMixture,
                initial_age: f64,
                interval_duration: f64,
                includeAnnihilation: bool,
                sort_type: root::SandiaDecay::NuclideMixture_HowToOrder::Type,
                characteristic_time_slices: usize,
            ) -> root::__BindgenOpaqueArray<u64, 3usize>;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture22decayPhotonsInIntervalEddNS0_10HowToOrderEm"]
            pub fn NuclideMixture_decayPhotonsInInterval(
                this: *const root::SandiaDecay::NuclideMixture,
                initial_age: f64,
                interval_duration: f64,
                sort_type: root::SandiaDecay::NuclideMixture_HowToOrder::Type,
                characteristic_time_slices: usize,
            ) -> root::__BindgenOpaqueArray<u64, 3usize>;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture4infoB5cxx11Ed"]
            pub fn NuclideMixture_info(
                this: *const root::SandiaDecay::NuclideMixture,
                time: f64,
            ) -> root::std::string;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture18numInitialNuclidesEv"]
            pub fn NuclideMixture_numInitialNuclides(
                this: *const root::SandiaDecay::NuclideMixture,
            ) -> ::core::ffi::c_int;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture14initialNuclideEi"]
            pub fn NuclideMixture_initialNuclide(
                this: *const root::SandiaDecay::NuclideMixture,
                index: ::core::ffi::c_int,
            ) -> *const root::SandiaDecay::Nuclide;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture15numInitialAtomsEi"]
            pub fn NuclideMixture_numInitialAtoms(
                this: *const root::SandiaDecay::NuclideMixture,
                index: ::core::ffi::c_int,
            ) -> f64;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture15initialActivityEi"]
            pub fn NuclideMixture_initialActivity(
                this: *const root::SandiaDecay::NuclideMixture,
                index: ::core::ffi::c_int,
            ) -> f64;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture19internalIndexNumberEPKNS_7NuclideE"]
            pub fn NuclideMixture_internalIndexNumber(
                this: *const root::SandiaDecay::NuclideMixture,
                nuclide: *const root::SandiaDecay::Nuclide,
            ) -> ::core::ffi::c_int;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture19internalIndexNumberERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"]
            pub fn NuclideMixture_internalIndexNumber1(
                this: *const root::SandiaDecay::NuclideMixture,
                symbol: *const root::std::string,
            ) -> ::core::ffi::c_int;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture19internalIndexNumberEiii"]
            pub fn NuclideMixture_internalIndexNumber2(
                this: *const root::SandiaDecay::NuclideMixture,
                z: ::core::ffi::c_int,
                mass_number: ::core::ffi::c_int,
                iso: ::core::ffi::c_int,
            ) -> ::core::ffi::c_int;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture15solutionNuclideEi"]
            pub fn NuclideMixture_solutionNuclide(
                this: *const root::SandiaDecay::NuclideMixture,
                internal_index_number: ::core::ffi::c_int,
            ) -> *const root::SandiaDecay::Nuclide;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture27decayedToNuclidesEvolutionsEv"]
            pub fn NuclideMixture_decayedToNuclidesEvolutions(
                this: *const root::SandiaDecay::NuclideMixture,
            ) -> *const root::__BindgenOpaqueArray<u64, 3usize>;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay14NuclideMixture20performTimeEvolutionEv"]
            pub fn NuclideMixture_performTimeEvolution(
                this: *const root::SandiaDecay::NuclideMixture,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay14NuclideMixtureC1Ev"]
            pub fn NuclideMixture_NuclideMixture(this: *mut root::SandiaDecay::NuclideMixture);
        }
        impl NuclideMixture {
            #[inline]
            pub unsafe fn clear(&mut self) {
                NuclideMixture_clear(self)
            }
            #[inline]
            pub unsafe fn addNuclideByAbundance(
                &mut self,
                nuclide: *const root::SandiaDecay::Nuclide,
                num_init_atom: root::SandiaDecay::CalcFloatType,
            ) {
                NuclideMixture_addNuclideByAbundance(self, nuclide, num_init_atom)
            }
            #[inline]
            pub unsafe fn addNuclideByActivity(
                &mut self,
                nuclide: *const root::SandiaDecay::Nuclide,
                activity: root::SandiaDecay::CalcFloatType,
            ) {
                NuclideMixture_addNuclideByActivity(self, nuclide, activity)
            }
            #[inline]
            pub unsafe fn addNuclide(
                &mut self,
                nucide: *const root::SandiaDecay::NuclideNumAtomsPair,
            ) {
                NuclideMixture_addNuclide(self, nucide)
            }
            #[inline]
            pub unsafe fn addNuclide1(
                &mut self,
                nucide: *const root::SandiaDecay::NuclideActivityPair,
            ) {
                NuclideMixture_addNuclide1(self, nucide)
            }
            #[inline]
            pub unsafe fn addAgedNuclideByActivity(
                &mut self,
                nuclide: *const root::SandiaDecay::Nuclide,
                activity: root::SandiaDecay::CalcFloatType,
                age_in_seconds: f64,
            ) {
                NuclideMixture_addAgedNuclideByActivity(self, nuclide, activity, age_in_seconds)
            }
            #[inline]
            pub unsafe fn addAgedNuclideByNumAtoms(
                &mut self,
                nuclide: *const root::SandiaDecay::Nuclide,
                number_atoms: root::SandiaDecay::CalcFloatType,
                age_in_seconds: f64,
            ) {
                NuclideMixture_addAgedNuclideByNumAtoms(self, nuclide, number_atoms, age_in_seconds)
            }
            #[inline]
            pub unsafe fn addNuclideInSecularEquilibrium(
                &mut self,
                parent: *const root::SandiaDecay::Nuclide,
                parent_activity: root::SandiaDecay::CalcFloatType,
            ) -> bool {
                NuclideMixture_addNuclideInSecularEquilibrium(self, parent, parent_activity)
            }
            #[inline]
            pub unsafe fn addNuclideInPromptEquilibrium(
                &mut self,
                parent: *const root::SandiaDecay::Nuclide,
                parent_activity: root::SandiaDecay::CalcFloatType,
            ) {
                NuclideMixture_addNuclideInPromptEquilibrium(self, parent, parent_activity)
            }
            #[inline]
            pub unsafe fn numSolutionNuclides(&self) -> ::core::ffi::c_int {
                NuclideMixture_numSolutionNuclides(self)
            }
            #[inline]
            pub unsafe fn activity(
                &self,
                time: f64,
                nuclide: *const root::SandiaDecay::Nuclide,
            ) -> root::SandiaDecay::CalcFloatType {
                NuclideMixture_activity(self, time, nuclide)
            }
            #[inline]
            pub unsafe fn activity1(
                &self,
                time: f64,
                symbol: *const root::std::string,
            ) -> root::SandiaDecay::CalcFloatType {
                NuclideMixture_activity1(self, time, symbol)
            }
            #[inline]
            pub unsafe fn activity2(
                &self,
                time: f64,
                z: ::core::ffi::c_int,
                atomic_mass: ::core::ffi::c_int,
                iso: ::core::ffi::c_int,
            ) -> root::SandiaDecay::CalcFloatType {
                NuclideMixture_activity2(self, time, z, atomic_mass, iso)
            }
            #[inline]
            pub unsafe fn activity3(
                &self,
                time: f64,
                internal_index_number: ::core::ffi::c_int,
            ) -> root::SandiaDecay::CalcFloatType {
                NuclideMixture_activity3(self, time, internal_index_number)
            }
            #[inline]
            pub unsafe fn activity4(
                &self,
                time_in_seconds: f64,
            ) -> root::__BindgenOpaqueArray<u64, 3usize> {
                NuclideMixture_activity4(self, time_in_seconds)
            }
            #[inline]
            pub unsafe fn numAtoms(
                &self,
                time: f64,
                nuclide: *const root::SandiaDecay::Nuclide,
            ) -> root::SandiaDecay::CalcFloatType {
                NuclideMixture_numAtoms(self, time, nuclide)
            }
            #[inline]
            pub unsafe fn numAtoms1(
                &self,
                time: f64,
                symbol: *const root::std::string,
            ) -> root::SandiaDecay::CalcFloatType {
                NuclideMixture_numAtoms1(self, time, symbol)
            }
            #[inline]
            pub unsafe fn numAtoms2(
                &self,
                time: f64,
                z: ::core::ffi::c_int,
                atomic_mass: ::core::ffi::c_int,
                iso: ::core::ffi::c_int,
            ) -> root::SandiaDecay::CalcFloatType {
                NuclideMixture_numAtoms2(self, time, z, atomic_mass, iso)
            }
            #[inline]
            pub unsafe fn numAtoms3(
                &self,
                time: f64,
                internal_index_number: ::core::ffi::c_int,
            ) -> root::SandiaDecay::CalcFloatType {
                NuclideMixture_numAtoms3(self, time, internal_index_number)
            }
            #[inline]
            pub unsafe fn numAtoms4(
                &self,
                time_in_seconds: f64,
            ) -> root::__BindgenOpaqueArray<u64, 3usize> {
                NuclideMixture_numAtoms4(self, time_in_seconds)
            }
            #[inline]
            pub unsafe fn totalActivity(&self, time: f64) -> root::SandiaDecay::CalcFloatType {
                NuclideMixture_totalActivity(self, time)
            }
            #[inline]
            pub unsafe fn totalMassInGrams(&self, time: f64) -> root::SandiaDecay::CalcFloatType {
                NuclideMixture_totalMassInGrams(self, time)
            }
            #[inline]
            pub unsafe fn gammas(
                &self,
                time: f64,
                sortType: root::SandiaDecay::NuclideMixture_HowToOrder::Type,
                includeAnihilationGammas: bool,
            ) -> root::__BindgenOpaqueArray<u64, 3usize> {
                NuclideMixture_gammas(self, time, sortType, includeAnihilationGammas)
            }
            #[inline]
            pub unsafe fn alphas(
                &self,
                time: f64,
                sortType: root::SandiaDecay::NuclideMixture_HowToOrder::Type,
            ) -> root::__BindgenOpaqueArray<u64, 3usize> {
                NuclideMixture_alphas(self, time, sortType)
            }
            #[inline]
            pub unsafe fn betas(
                &self,
                time: f64,
                sortType: root::SandiaDecay::NuclideMixture_HowToOrder::Type,
            ) -> root::__BindgenOpaqueArray<u64, 3usize> {
                NuclideMixture_betas(self, time, sortType)
            }
            #[inline]
            pub unsafe fn betaPlusses(
                &self,
                time: f64,
                sortType: root::SandiaDecay::NuclideMixture_HowToOrder::Type,
            ) -> root::__BindgenOpaqueArray<u64, 3usize> {
                NuclideMixture_betaPlusses(self, time, sortType)
            }
            #[inline]
            pub unsafe fn xrays(
                &self,
                time: f64,
                sortType: root::SandiaDecay::NuclideMixture_HowToOrder::Type,
            ) -> root::__BindgenOpaqueArray<u64, 3usize> {
                NuclideMixture_xrays(self, time, sortType)
            }
            #[inline]
            pub unsafe fn photons(
                &self,
                time: f64,
                sortType: root::SandiaDecay::NuclideMixture_HowToOrder::Type,
            ) -> root::__BindgenOpaqueArray<u64, 3usize> {
                NuclideMixture_photons(self, time, sortType)
            }
            #[inline]
            pub unsafe fn decayParticle(
                &self,
                time: f64,
                type_: root::SandiaDecay::ProductType::Type,
                sortType: root::SandiaDecay::NuclideMixture_HowToOrder::Type,
            ) -> root::__BindgenOpaqueArray<u64, 3usize> {
                NuclideMixture_decayParticle(self, time, type_, sortType)
            }
            #[inline]
            pub unsafe fn decayParticlesInInterval(
                &self,
                initial_age: f64,
                interval_duration: f64,
                type_: root::SandiaDecay::ProductType::Type,
                sort_type: root::SandiaDecay::NuclideMixture_HowToOrder::Type,
                characteristic_time_slices: usize,
            ) -> root::__BindgenOpaqueArray<u64, 3usize> {
                NuclideMixture_decayParticlesInInterval(
                    self,
                    initial_age,
                    interval_duration,
                    type_,
                    sort_type,
                    characteristic_time_slices,
                )
            }
            #[inline]
            pub unsafe fn decayGammasInInterval(
                &self,
                initial_age: f64,
                interval_duration: f64,
                includeAnnihilation: bool,
                sort_type: root::SandiaDecay::NuclideMixture_HowToOrder::Type,
                characteristic_time_slices: usize,
            ) -> root::__BindgenOpaqueArray<u64, 3usize> {
                NuclideMixture_decayGammasInInterval(
                    self,
                    initial_age,
                    interval_duration,
                    includeAnnihilation,
                    sort_type,
                    characteristic_time_slices,
                )
            }
            #[inline]
            pub unsafe fn decayPhotonsInInterval(
                &self,
                initial_age: f64,
                interval_duration: f64,
                sort_type: root::SandiaDecay::NuclideMixture_HowToOrder::Type,
                characteristic_time_slices: usize,
            ) -> root::__BindgenOpaqueArray<u64, 3usize> {
                NuclideMixture_decayPhotonsInInterval(
                    self,
                    initial_age,
                    interval_duration,
                    sort_type,
                    characteristic_time_slices,
                )
            }
            #[inline]
            pub unsafe fn info(&self, time: f64) -> root::std::string {
                NuclideMixture_info(self, time)
            }
            #[inline]
            pub unsafe fn numInitialNuclides(&self) -> ::core::ffi::c_int {
                NuclideMixture_numInitialNuclides(self)
            }
            #[inline]
            pub unsafe fn initialNuclide(
                &self,
                index: ::core::ffi::c_int,
            ) -> *const root::SandiaDecay::Nuclide {
                NuclideMixture_initialNuclide(self, index)
            }
            #[inline]
            pub unsafe fn numInitialAtoms(&self, index: ::core::ffi::c_int) -> f64 {
                NuclideMixture_numInitialAtoms(self, index)
            }
            #[inline]
            pub unsafe fn initialActivity(&self, index: ::core::ffi::c_int) -> f64 {
                NuclideMixture_initialActivity(self, index)
            }
            #[inline]
            pub unsafe fn internalIndexNumber(
                &self,
                nuclide: *const root::SandiaDecay::Nuclide,
            ) -> ::core::ffi::c_int {
                NuclideMixture_internalIndexNumber(self, nuclide)
            }
            #[inline]
            pub unsafe fn internalIndexNumber1(
                &self,
                symbol: *const root::std::string,
            ) -> ::core::ffi::c_int {
                NuclideMixture_internalIndexNumber1(self, symbol)
            }
            #[inline]
            pub unsafe fn internalIndexNumber2(
                &self,
                z: ::core::ffi::c_int,
                mass_number: ::core::ffi::c_int,
                iso: ::core::ffi::c_int,
            ) -> ::core::ffi::c_int {
                NuclideMixture_internalIndexNumber2(self, z, mass_number, iso)
            }
            #[inline]
            pub unsafe fn solutionNuclide(
                &self,
                internal_index_number: ::core::ffi::c_int,
            ) -> *const root::SandiaDecay::Nuclide {
                NuclideMixture_solutionNuclide(self, internal_index_number)
            }
            #[inline]
            pub unsafe fn decayedToNuclidesEvolutions(
                &self,
            ) -> *const root::__BindgenOpaqueArray<u64, 3usize> {
                NuclideMixture_decayedToNuclidesEvolutions(self)
            }
            #[inline]
            pub unsafe fn performTimeEvolution(&self) {
                NuclideMixture_performTimeEvolution(self)
            }
            #[inline]
            pub unsafe fn new() -> Self {
                let mut __bindgen_tmp = ::core::mem::MaybeUninit::uninit();
                NuclideMixture_NuclideMixture(__bindgen_tmp.as_mut_ptr());
                __bindgen_tmp.assume_init()
            }
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay14NuclideMixtureD1Ev"]
            pub fn NuclideMixture_NuclideMixture_destructor(
                this: *mut root::SandiaDecay::NuclideMixture,
            );
        }
        #[repr(C)]
        pub struct Nuclide {
            pub symbol: root::std::string,
            pub atomicNumber: ::core::ffi::c_short,
            pub massNumber: ::core::ffi::c_short,
            pub isomerNumber: ::core::ffi::c_short,
            pub atomicMass: f32,
            pub halfLife: f64,
            pub decaysToChildren: root::__BindgenOpaqueArray<u64, 3usize>,
            pub decaysFromParents: root::__BindgenOpaqueArray<u64, 3usize>,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay7Nuclide13decayConstantEv"]
            pub fn Nuclide_decayConstant(this: *const root::SandiaDecay::Nuclide) -> f64;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay7Nuclide9numDecaysEv"]
            pub fn Nuclide_numDecays(this: *const root::SandiaDecay::Nuclide) -> usize;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay7Nuclide8isStableEv"]
            pub fn Nuclide_isStable(this: *const root::SandiaDecay::Nuclide) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay7Nuclide20partialDecayConstantEm"]
            pub fn Nuclide_partialDecayConstant(
                this: *const root::SandiaDecay::Nuclide,
                transition_num: usize,
            ) -> f64;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay7Nuclide14branchingRatioEm"]
            pub fn Nuclide_branchingRatio(
                this: *const root::SandiaDecay::Nuclide,
                transition_num: usize,
            ) -> f32;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay7Nuclide5childEm"]
            pub fn Nuclide_child(
                this: *const root::SandiaDecay::Nuclide,
                transition_num: usize,
            ) -> *const root::SandiaDecay::Nuclide;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay7Nuclide18numAtomsToActivityEd"]
            pub fn Nuclide_numAtomsToActivity(
                this: *const root::SandiaDecay::Nuclide,
                num_atoms: root::SandiaDecay::CalcFloatType,
            ) -> root::SandiaDecay::CalcFloatType;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay7Nuclide18activityToNumAtomsEd"]
            pub fn Nuclide_activityToNumAtoms(
                this: *const root::SandiaDecay::Nuclide,
                activity: root::SandiaDecay::CalcFloatType,
            ) -> root::SandiaDecay::CalcFloatType;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay7Nuclide22branchRatioToDecendantEPKS0_"]
            pub fn Nuclide_branchRatioToDecendant(
                this: *const root::SandiaDecay::Nuclide,
                descendant: *const root::SandiaDecay::Nuclide,
            ) -> f32;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay7Nuclide23branchRatioFromForebearEPKS0_"]
            pub fn Nuclide_branchRatioFromForebear(
                this: *const root::SandiaDecay::Nuclide,
                ancestor: *const root::SandiaDecay::Nuclide,
            ) -> f32;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay7Nuclide11descendantsEv"]
            pub fn Nuclide_descendants(
                this: *const root::SandiaDecay::Nuclide,
            ) -> root::__BindgenOpaqueArray<u64, 3usize>;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay7Nuclide11forebearersEv"]
            pub fn Nuclide_forebearers(
                this: *const root::SandiaDecay::Nuclide,
            ) -> root::__BindgenOpaqueArray<u64, 3usize>;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay7Nuclide26secularEquilibriumHalfLifeEv"]
            pub fn Nuclide_secularEquilibriumHalfLife(
                this: *const root::SandiaDecay::Nuclide,
            ) -> f64;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay7Nuclide27canObtainSecularEquilibriumEv"]
            pub fn Nuclide_canObtainSecularEquilibrium(
                this: *const root::SandiaDecay::Nuclide,
            ) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay7Nuclide25promptEquilibriumHalfLifeEv"]
            pub fn Nuclide_promptEquilibriumHalfLife(
                this: *const root::SandiaDecay::Nuclide,
            ) -> f64;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay7Nuclide26canObtainPromptEquilibriumEv"]
            pub fn Nuclide_canObtainPromptEquilibrium(
                this: *const root::SandiaDecay::Nuclide,
            ) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay7Nuclide12atomsPerGramEv"]
            pub fn Nuclide_atomsPerGram(this: *const root::SandiaDecay::Nuclide) -> f64;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay7Nuclide15activityPerGramEv"]
            pub fn Nuclide_activityPerGram(this: *const root::SandiaDecay::Nuclide) -> f64;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay7Nuclide22decaysToStableChildrenEv"]
            pub fn Nuclide_decaysToStableChildren(this: *const root::SandiaDecay::Nuclide) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay7Nuclide7memsizeEv"]
            pub fn Nuclide_memsize(this: *const root::SandiaDecay::Nuclide) -> usize;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay7Nuclide15lessThanByDecayEPKS0_S2_"]
            pub fn Nuclide_lessThanByDecay(
                lhs: *const root::SandiaDecay::Nuclide,
                rhs: *const root::SandiaDecay::Nuclide,
            ) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay7Nuclide18greaterThanByDecayEPKS0_S2_"]
            pub fn Nuclide_greaterThanByDecay(
                lhs: *const root::SandiaDecay::Nuclide,
                rhs: *const root::SandiaDecay::Nuclide,
            ) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay7Nuclide19lessThanForOrderingEPKS0_S2_"]
            pub fn Nuclide_lessThanForOrdering(
                lhs: *const root::SandiaDecay::Nuclide,
                rhs: *const root::SandiaDecay::Nuclide,
            ) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay7Nuclide22greaterThanForOrderingEPKS0_S2_"]
            pub fn Nuclide_greaterThanForOrdering(
                lhs: *const root::SandiaDecay::Nuclide,
                rhs: *const root::SandiaDecay::Nuclide,
            ) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay7Nuclide3setEPKN8rapidxml8xml_nodeIcEE"]
            pub fn Nuclide_set(
                this: *mut root::SandiaDecay::Nuclide,
                node: *const root::rapidxml::xml_node,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay7NuclideC1EPKN8rapidxml8xml_nodeIcEE"]
            pub fn Nuclide_Nuclide(
                this: *mut root::SandiaDecay::Nuclide,
                node: *const root::rapidxml::xml_node,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay7NuclideD1Ev"]
            pub fn Nuclide_Nuclide_destructor(this: *mut root::SandiaDecay::Nuclide);
        }
        impl Nuclide {
            #[inline]
            pub unsafe fn decayConstant(&self) -> f64 {
                Nuclide_decayConstant(self)
            }
            #[inline]
            pub unsafe fn numDecays(&self) -> usize {
                Nuclide_numDecays(self)
            }
            #[inline]
            pub unsafe fn isStable(&self) -> bool {
                Nuclide_isStable(self)
            }
            #[inline]
            pub unsafe fn partialDecayConstant(&self, transition_num: usize) -> f64 {
                Nuclide_partialDecayConstant(self, transition_num)
            }
            #[inline]
            pub unsafe fn branchingRatio(&self, transition_num: usize) -> f32 {
                Nuclide_branchingRatio(self, transition_num)
            }
            #[inline]
            pub unsafe fn child(&self, transition_num: usize) -> *const root::SandiaDecay::Nuclide {
                Nuclide_child(self, transition_num)
            }
            #[inline]
            pub unsafe fn numAtomsToActivity(
                &self,
                num_atoms: root::SandiaDecay::CalcFloatType,
            ) -> root::SandiaDecay::CalcFloatType {
                Nuclide_numAtomsToActivity(self, num_atoms)
            }
            #[inline]
            pub unsafe fn activityToNumAtoms(
                &self,
                activity: root::SandiaDecay::CalcFloatType,
            ) -> root::SandiaDecay::CalcFloatType {
                Nuclide_activityToNumAtoms(self, activity)
            }
            #[inline]
            pub unsafe fn branchRatioToDecendant(
                &self,
                descendant: *const root::SandiaDecay::Nuclide,
            ) -> f32 {
                Nuclide_branchRatioToDecendant(self, descendant)
            }
            #[inline]
            pub unsafe fn branchRatioFromForebear(
                &self,
                ancestor: *const root::SandiaDecay::Nuclide,
            ) -> f32 {
                Nuclide_branchRatioFromForebear(self, ancestor)
            }
            #[inline]
            pub unsafe fn descendants(&self) -> root::__BindgenOpaqueArray<u64, 3usize> {
                Nuclide_descendants(self)
            }
            #[inline]
            pub unsafe fn forebearers(&self) -> root::__BindgenOpaqueArray<u64, 3usize> {
                Nuclide_forebearers(self)
            }
            #[inline]
            pub unsafe fn secularEquilibriumHalfLife(&self) -> f64 {
                Nuclide_secularEquilibriumHalfLife(self)
            }
            #[inline]
            pub unsafe fn canObtainSecularEquilibrium(&self) -> bool {
                Nuclide_canObtainSecularEquilibrium(self)
            }
            #[inline]
            pub unsafe fn promptEquilibriumHalfLife(&self) -> f64 {
                Nuclide_promptEquilibriumHalfLife(self)
            }
            #[inline]
            pub unsafe fn canObtainPromptEquilibrium(&self) -> bool {
                Nuclide_canObtainPromptEquilibrium(self)
            }
            #[inline]
            pub unsafe fn atomsPerGram(&self) -> f64 {
                Nuclide_atomsPerGram(self)
            }
            #[inline]
            pub unsafe fn activityPerGram(&self) -> f64 {
                Nuclide_activityPerGram(self)
            }
            #[inline]
            pub unsafe fn decaysToStableChildren(&self) -> bool {
                Nuclide_decaysToStableChildren(self)
            }
            #[inline]
            pub unsafe fn memsize(&self) -> usize {
                Nuclide_memsize(self)
            }
            #[inline]
            pub unsafe fn lessThanByDecay(
                lhs: *const root::SandiaDecay::Nuclide,
                rhs: *const root::SandiaDecay::Nuclide,
            ) -> bool {
                Nuclide_lessThanByDecay(lhs, rhs)
            }
            #[inline]
            pub unsafe fn greaterThanByDecay(
                lhs: *const root::SandiaDecay::Nuclide,
                rhs: *const root::SandiaDecay::Nuclide,
            ) -> bool {
                Nuclide_greaterThanByDecay(lhs, rhs)
            }
            #[inline]
            pub unsafe fn lessThanForOrdering(
                lhs: *const root::SandiaDecay::Nuclide,
                rhs: *const root::SandiaDecay::Nuclide,
            ) -> bool {
                Nuclide_lessThanForOrdering(lhs, rhs)
            }
            #[inline]
            pub unsafe fn greaterThanForOrdering(
                lhs: *const root::SandiaDecay::Nuclide,
                rhs: *const root::SandiaDecay::Nuclide,
            ) -> bool {
                Nuclide_greaterThanForOrdering(lhs, rhs)
            }
            #[inline]
            pub unsafe fn set(&mut self, node: *const root::rapidxml::xml_node) {
                Nuclide_set(self, node)
            }
            #[inline]
            pub unsafe fn new(node: *const root::rapidxml::xml_node) -> Self {
                let mut __bindgen_tmp = ::core::mem::MaybeUninit::uninit();
                Nuclide_Nuclide(__bindgen_tmp.as_mut_ptr(), node);
                __bindgen_tmp.assume_init()
            }
            #[inline]
            pub unsafe fn destruct(&mut self) {
                Nuclide_Nuclide_destructor(self)
            }
        }
        #[repr(C)]
        pub struct RadParticle {
            pub type_: root::SandiaDecay::ProductType::Type,
            pub energy: f32,
            pub intensity: f32,
            pub hindrance: f32,
            pub logFT: f32,
            pub forbiddenness: root::SandiaDecay::ForbiddennessType::Type,
            pub coincidences: root::__BindgenOpaqueArray<u64, 3usize>,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay11RadParticle7memsizeEv"]
            pub fn RadParticle_memsize(this: *const root::SandiaDecay::RadParticle) -> usize;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay11RadParticle3setEPKN8rapidxml8xml_nodeIcEE"]
            pub fn RadParticle_set(
                this: *mut root::SandiaDecay::RadParticle,
                node: *const root::rapidxml::xml_node,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay11RadParticleC1EPKN8rapidxml8xml_nodeIcEE"]
            pub fn RadParticle_RadParticle(
                this: *mut root::SandiaDecay::RadParticle,
                node: *const root::rapidxml::xml_node,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay11RadParticleC1ENS_11ProductTypeEff"]
            pub fn RadParticle_RadParticle1(
                this: *mut root::SandiaDecay::RadParticle,
                arg1: root::SandiaDecay::ProductType::Type,
                energy: f32,
                intensity: f32,
            );
        }
        impl RadParticle {
            #[inline]
            pub unsafe fn memsize(&self) -> usize {
                RadParticle_memsize(self)
            }
            #[inline]
            pub unsafe fn set(&mut self, node: *const root::rapidxml::xml_node) {
                RadParticle_set(self, node)
            }
            #[inline]
            pub unsafe fn new(node: *const root::rapidxml::xml_node) -> Self {
                let mut __bindgen_tmp = ::core::mem::MaybeUninit::uninit();
                RadParticle_RadParticle(__bindgen_tmp.as_mut_ptr(), node);
                __bindgen_tmp.assume_init()
            }
            #[inline]
            pub unsafe fn new1(
                arg1: root::SandiaDecay::ProductType::Type,
                energy: f32,
                intensity: f32,
            ) -> Self {
                let mut __bindgen_tmp = ::core::mem::MaybeUninit::uninit();
                RadParticle_RadParticle1(__bindgen_tmp.as_mut_ptr(), arg1, energy, intensity);
                __bindgen_tmp.assume_init()
            }
        }
        #[repr(C)]
        pub struct Transition {
            pub parent: *const root::SandiaDecay::Nuclide,
            pub child: *const root::SandiaDecay::Nuclide,
            pub mode: root::SandiaDecay::DecayMode::Type,
            pub branchRatio: f32,
            pub products: root::__BindgenOpaqueArray<u64, 3usize>,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay10Transition7memsizeEv"]
            pub fn Transition_memsize(this: *const root::SandiaDecay::Transition) -> usize;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay10Transition3setEPKN8rapidxml8xml_nodeIcEERKSt6vectorIPKNS_7NuclideESaIS9_EE"]
            pub fn Transition_set(
                this: *mut root::SandiaDecay::Transition,
                node: *const root::rapidxml::xml_node,
                nuclides: *const root::__BindgenOpaqueArray<u64, 3usize>,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay10TransitionC1EPKN8rapidxml8xml_nodeIcEERKSt6vectorIPKNS_7NuclideESaIS9_EE"]
            pub fn Transition_Transition(
                this: *mut root::SandiaDecay::Transition,
                node: *const root::rapidxml::xml_node,
                nuclides: *const root::__BindgenOpaqueArray<u64, 3usize>,
            );
        }
        impl Transition {
            #[inline]
            pub unsafe fn memsize(&self) -> usize {
                Transition_memsize(self)
            }
            #[inline]
            pub unsafe fn set(
                &mut self,
                node: *const root::rapidxml::xml_node,
                nuclides: *const root::__BindgenOpaqueArray<u64, 3usize>,
            ) {
                Transition_set(self, node, nuclides)
            }
            #[inline]
            pub unsafe fn new(
                node: *const root::rapidxml::xml_node,
                nuclides: *const root::__BindgenOpaqueArray<u64, 3usize>,
            ) -> Self {
                let mut __bindgen_tmp = ::core::mem::MaybeUninit::uninit();
                Transition_Transition(__bindgen_tmp.as_mut_ptr(), node, nuclides);
                __bindgen_tmp.assume_init()
            }
        }
        #[repr(C)]
        pub struct Element {
            pub symbol: root::std::string,
            pub name: root::std::string,
            pub atomicNumber: ::core::ffi::c_short,
            pub isotopes: root::__BindgenOpaqueArray<u64, 3usize>,
            pub xrays: root::__BindgenOpaqueArray<u64, 3usize>,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay7Element10atomicMassEv"]
            pub fn Element_atomicMass(this: *const root::SandiaDecay::Element) -> f64;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay7Element3setEPN8rapidxml8xml_nodeIcEERKSt6vectorIPKNS_7NuclideESaIS8_EE"]
            pub fn Element_set(
                this: *mut root::SandiaDecay::Element,
                node: *mut root::rapidxml::xml_node,
                nuclides: *const root::__BindgenOpaqueArray<u64, 3usize>,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay7Element7memsizeEv"]
            pub fn Element_memsize(this: *const root::SandiaDecay::Element) -> usize;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay7Element8lessThanEPKS0_S2_"]
            pub fn Element_lessThan(
                lhs: *const root::SandiaDecay::Element,
                rhs: *const root::SandiaDecay::Element,
            ) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay7Element20lessThanForAtomicNumEPKS0_i"]
            pub fn Element_lessThanForAtomicNum(
                lhs: *const root::SandiaDecay::Element,
                atomicNum: ::core::ffi::c_int,
            ) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay7ElementC1EPN8rapidxml8xml_nodeIcEERKSt6vectorIPKNS_7NuclideESaIS8_EE"]
            pub fn Element_Element(
                this: *mut root::SandiaDecay::Element,
                node: *mut root::rapidxml::xml_node,
                nuclides: *const root::__BindgenOpaqueArray<u64, 3usize>,
            );
        }
        impl Element {
            #[inline]
            pub unsafe fn atomicMass(&self) -> f64 {
                Element_atomicMass(self)
            }
            #[inline]
            pub unsafe fn set(
                &mut self,
                node: *mut root::rapidxml::xml_node,
                nuclides: *const root::__BindgenOpaqueArray<u64, 3usize>,
            ) {
                Element_set(self, node, nuclides)
            }
            #[inline]
            pub unsafe fn memsize(&self) -> usize {
                Element_memsize(self)
            }
            #[inline]
            pub unsafe fn lessThan(
                lhs: *const root::SandiaDecay::Element,
                rhs: *const root::SandiaDecay::Element,
            ) -> bool {
                Element_lessThan(lhs, rhs)
            }
            #[inline]
            pub unsafe fn lessThanForAtomicNum(
                lhs: *const root::SandiaDecay::Element,
                atomicNum: ::core::ffi::c_int,
            ) -> bool {
                Element_lessThanForAtomicNum(lhs, atomicNum)
            }
            #[inline]
            pub unsafe fn new(
                node: *mut root::rapidxml::xml_node,
                nuclides: *const root::__BindgenOpaqueArray<u64, 3usize>,
            ) -> Self {
                let mut __bindgen_tmp = ::core::mem::MaybeUninit::uninit();
                Element_Element(__bindgen_tmp.as_mut_ptr(), node, nuclides);
                __bindgen_tmp.assume_init()
            }
        }
        #[repr(C)]
        pub struct TimeEvolutionTerm {
            pub termCoeff: root::SandiaDecay::CalcFloatType,
            pub exponentialCoeff: root::SandiaDecay::CalcFloatType,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay17TimeEvolutionTerm4evalEd"]
            pub fn TimeEvolutionTerm_eval(
                this: *const root::SandiaDecay::TimeEvolutionTerm,
                time_in_seconds: f64,
            ) -> root::SandiaDecay::CalcFloatType;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay17TimeEvolutionTermC1EdPKNS_7NuclideE"]
            pub fn TimeEvolutionTerm_TimeEvolutionTerm(
                this: *mut root::SandiaDecay::TimeEvolutionTerm,
                mag: root::SandiaDecay::CalcFloatType,
                nuc: *const root::SandiaDecay::Nuclide,
            );
        }
        impl TimeEvolutionTerm {
            #[inline]
            pub unsafe fn eval(&self, time_in_seconds: f64) -> root::SandiaDecay::CalcFloatType {
                TimeEvolutionTerm_eval(self, time_in_seconds)
            }
            #[inline]
            pub unsafe fn new(
                mag: root::SandiaDecay::CalcFloatType,
                nuc: *const root::SandiaDecay::Nuclide,
            ) -> Self {
                let mut __bindgen_tmp = ::core::mem::MaybeUninit::uninit();
                TimeEvolutionTerm_TimeEvolutionTerm(__bindgen_tmp.as_mut_ptr(), mag, nuc);
                __bindgen_tmp.assume_init()
            }
        }
        #[repr(C)]
        pub struct NuclideTimeEvolution {
            pub nuclide: *const root::SandiaDecay::Nuclide,
            pub evolutionTerms: root::__BindgenOpaqueArray<u64, 3usize>,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay20NuclideTimeEvolution8numAtomsEd"]
            pub fn NuclideTimeEvolution_numAtoms(
                this: *const root::SandiaDecay::NuclideTimeEvolution,
                time_in_seconds: f64,
            ) -> root::SandiaDecay::CalcFloatType;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK11SandiaDecay20NuclideTimeEvolution8activityEd"]
            pub fn NuclideTimeEvolution_activity(
                this: *const root::SandiaDecay::NuclideTimeEvolution,
                time_in_seconds: f64,
            ) -> root::SandiaDecay::CalcFloatType;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay20NuclideTimeEvolution16addEvolutionTermEdPKNS_7NuclideE"]
            pub fn NuclideTimeEvolution_addEvolutionTerm(
                this: *mut root::SandiaDecay::NuclideTimeEvolution,
                mag: root::SandiaDecay::CalcFloatType,
                nuc: *const root::SandiaDecay::Nuclide,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay20NuclideTimeEvolutionC1EPKNS_7NuclideE"]
            pub fn NuclideTimeEvolution_NuclideTimeEvolution(
                this: *mut root::SandiaDecay::NuclideTimeEvolution,
                _nuclide: *const root::SandiaDecay::Nuclide,
            );
        }
        impl NuclideTimeEvolution {
            #[inline]
            pub unsafe fn numAtoms(
                &self,
                time_in_seconds: f64,
            ) -> root::SandiaDecay::CalcFloatType {
                NuclideTimeEvolution_numAtoms(self, time_in_seconds)
            }
            #[inline]
            pub unsafe fn activity(
                &self,
                time_in_seconds: f64,
            ) -> root::SandiaDecay::CalcFloatType {
                NuclideTimeEvolution_activity(self, time_in_seconds)
            }
            #[inline]
            pub unsafe fn addEvolutionTerm(
                &mut self,
                mag: root::SandiaDecay::CalcFloatType,
                nuc: *const root::SandiaDecay::Nuclide,
            ) {
                NuclideTimeEvolution_addEvolutionTerm(self, mag, nuc)
            }
            #[inline]
            pub unsafe fn new(_nuclide: *const root::SandiaDecay::Nuclide) -> Self {
                let mut __bindgen_tmp = ::core::mem::MaybeUninit::uninit();
                NuclideTimeEvolution_NuclideTimeEvolution(__bindgen_tmp.as_mut_ptr(), _nuclide);
                __bindgen_tmp.assume_init()
            }
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay6to_strENS_11ProductTypeE"]
            pub fn to_str(s: root::SandiaDecay::ProductType::Type) -> *const ::core::ffi::c_char;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay6to_strERKNS_9DecayModeE"]
            pub fn to_str1(
                s: *const root::SandiaDecay::DecayMode::Type,
            ) -> *const ::core::ffi::c_char;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay17human_str_summaryB5cxx11ERKNS_7NuclideE"]
            pub fn human_str_summary(
                nuclide: *const root::SandiaDecay::Nuclide,
            ) -> root::std::string;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay17human_str_summaryB5cxx11ERKNS_10TransitionE"]
            pub fn human_str_summary1(
                transition: *const root::SandiaDecay::Transition,
            ) -> root::std::string;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN11SandiaDecay17human_str_summaryB5cxx11ERKNS_11RadParticleE"]
            pub fn human_str_summary2(
                particle: *const root::SandiaDecay::RadParticle,
            ) -> root::std::string;
        }
    }
    pub mod __pstl {
        #[allow(unused_imports)]
        use self::super::super::root;
        pub mod execution {
            #[allow(unused_imports)]
            use self::super::super::super::root;
        }
    }
    pub mod sdecay {
        #[allow(unused_imports)]
        use self::super::super::root;
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay20std_string_from_cstrEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKc"]
            pub fn std_string_from_cstr(
                out: *mut root::std::string,
                cstr: *const ::core::ffi::c_char,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay21std_string_from_bytesEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKcm"]
            pub fn std_string_from_bytes(
                out: *mut root::std::string,
                buffer: *const ::core::ffi::c_char,
                size: usize,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay15std_string_cstrEPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"]
            pub fn std_string_cstr(self_: *const root::std::string) -> *const ::core::ffi::c_char;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay16std_string_bytesEPKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPPKcPm"]
            pub fn std_string_bytes(
                self_: *const root::std::string,
                ptr: *mut *const ::core::ffi::c_char,
                len: *mut usize,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay19std_string_destructEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"]
            pub fn std_string_destruct(self_: *mut root::std::string);
        }
        pub type char_vec = root::__BindgenOpaqueArray<u64, 3usize>;
        #[repr(C)]
        pub struct _dummy_char_vec {
            pub inner: root::sdecay::char_vec,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay19std_vector_char_newEPSt6vectorIcSaIcEE"]
            pub fn std_vector_char_new(out: *mut root::sdecay::char_vec);
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay23std_vector_char_reserveEPSt6vectorIcSaIcEEm"]
            pub fn std_vector_char_reserve(self_: *mut root::sdecay::char_vec, capacity: usize);
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay20std_vector_char_pushEPSt6vectorIcSaIcEEPc"]
            pub fn std_vector_char_push(
                self_: *mut root::sdecay::char_vec,
                item: *mut ::core::ffi::c_char,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay25std_vector_char_from_dataEPKcmPSt6vectorIcSaIcEE"]
            pub fn std_vector_char_from_data(
                data: *const ::core::ffi::c_char,
                len: usize,
                out: *mut root::sdecay::char_vec,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay20std_vector_char_sizeEPKSt6vectorIcSaIcEE"]
            pub fn std_vector_char_size(self_: *const root::sdecay::char_vec) -> usize;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay21std_vector_char_emptyEPKSt6vectorIcSaIcEE"]
            pub fn std_vector_char_empty(self_: *const root::sdecay::char_vec) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay19std_vector_char_ptrEPKSt6vectorIcSaIcEE"]
            pub fn std_vector_char_ptr(
                self_: *const root::sdecay::char_vec,
            ) -> *const ::core::ffi::c_char;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay23std_vector_char_ptr_mutEPSt6vectorIcSaIcEE"]
            pub fn std_vector_char_ptr_mut(
                self_: *mut root::sdecay::char_vec,
            ) -> *mut ::core::ffi::c_char;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay24std_vector_char_destructEPSt6vectorIcSaIcEE"]
            pub fn std_vector_char_destruct(self_: *mut root::sdecay::char_vec);
        }
        pub type transition_vec = root::__BindgenOpaqueArray<u64, 3usize>;
        #[repr(C)]
        pub struct _dummy_transition_vec {
            pub inner: root::sdecay::transition_vec,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay25std_vector_transition_newEPSt6vectorIN11SandiaDecay10TransitionESaIS2_EE"]
            pub fn std_vector_transition_new(out: *mut root::sdecay::transition_vec);
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay29std_vector_transition_reserveEPSt6vectorIN11SandiaDecay10TransitionESaIS2_EEm"]
            pub fn std_vector_transition_reserve(
                self_: *mut root::sdecay::transition_vec,
                capacity: usize,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay26std_vector_transition_pushEPSt6vectorIN11SandiaDecay10TransitionESaIS2_EEPS2_"]
            pub fn std_vector_transition_push(
                self_: *mut root::sdecay::transition_vec,
                item: *mut root::SandiaDecay::Transition,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay31std_vector_transition_from_dataEPKN11SandiaDecay10TransitionEmPSt6vectorIS1_SaIS1_EE"]
            pub fn std_vector_transition_from_data(
                data: *const root::SandiaDecay::Transition,
                len: usize,
                out: *mut root::sdecay::transition_vec,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay26std_vector_transition_sizeEPKSt6vectorIN11SandiaDecay10TransitionESaIS2_EE"]
            pub fn std_vector_transition_size(self_: *const root::sdecay::transition_vec) -> usize;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay27std_vector_transition_emptyEPKSt6vectorIN11SandiaDecay10TransitionESaIS2_EE"]
            pub fn std_vector_transition_empty(self_: *const root::sdecay::transition_vec) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay25std_vector_transition_ptrEPKSt6vectorIN11SandiaDecay10TransitionESaIS2_EE"]
            pub fn std_vector_transition_ptr(
                self_: *const root::sdecay::transition_vec,
            ) -> *const root::SandiaDecay::Transition;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay29std_vector_transition_ptr_mutEPSt6vectorIN11SandiaDecay10TransitionESaIS2_EE"]
            pub fn std_vector_transition_ptr_mut(
                self_: *mut root::sdecay::transition_vec,
            ) -> *mut root::SandiaDecay::Transition;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay30std_vector_transition_destructEPSt6vectorIN11SandiaDecay10TransitionESaIS2_EE"]
            pub fn std_vector_transition_destruct(self_: *mut root::sdecay::transition_vec);
        }
        pub type transition_ptr_vec = root::__BindgenOpaqueArray<u64, 3usize>;
        #[repr(C)]
        pub struct _dummy_transition_ptr_vec {
            pub inner: root::sdecay::transition_ptr_vec,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay29std_vector_transition_ptr_newEPSt6vectorIPKN11SandiaDecay10TransitionESaIS4_EE"]
            pub fn std_vector_transition_ptr_new(out: *mut root::sdecay::transition_ptr_vec);
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay33std_vector_transition_ptr_reserveEPSt6vectorIPKN11SandiaDecay10TransitionESaIS4_EEm"]
            pub fn std_vector_transition_ptr_reserve(
                self_: *mut root::sdecay::transition_ptr_vec,
                capacity: usize,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay30std_vector_transition_ptr_pushEPSt6vectorIPKN11SandiaDecay10TransitionESaIS4_EEPS4_"]
            pub fn std_vector_transition_ptr_push(
                self_: *mut root::sdecay::transition_ptr_vec,
                item: *mut *const root::SandiaDecay::Transition,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay35std_vector_transition_ptr_from_dataEPKPKN11SandiaDecay10TransitionEmPSt6vectorIS3_SaIS3_EE"]
            pub fn std_vector_transition_ptr_from_data(
                data: *const *const root::SandiaDecay::Transition,
                len: usize,
                out: *mut root::sdecay::transition_ptr_vec,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay30std_vector_transition_ptr_sizeEPKSt6vectorIPKN11SandiaDecay10TransitionESaIS4_EE"]
            pub fn std_vector_transition_ptr_size(
                self_: *const root::sdecay::transition_ptr_vec,
            ) -> usize;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay31std_vector_transition_ptr_emptyEPKSt6vectorIPKN11SandiaDecay10TransitionESaIS4_EE"]
            pub fn std_vector_transition_ptr_empty(
                self_: *const root::sdecay::transition_ptr_vec,
            ) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay29std_vector_transition_ptr_ptrEPKSt6vectorIPKN11SandiaDecay10TransitionESaIS4_EE"]
            pub fn std_vector_transition_ptr_ptr(
                self_: *const root::sdecay::transition_ptr_vec,
            ) -> *const *const root::SandiaDecay::Transition;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay33std_vector_transition_ptr_ptr_mutEPSt6vectorIPKN11SandiaDecay10TransitionESaIS4_EE"]
            pub fn std_vector_transition_ptr_ptr_mut(
                self_: *mut root::sdecay::transition_ptr_vec,
            ) -> *mut *const root::SandiaDecay::Transition;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay34std_vector_transition_ptr_destructEPSt6vectorIPKN11SandiaDecay10TransitionESaIS4_EE"]
            pub fn std_vector_transition_ptr_destruct(self_: *mut root::sdecay::transition_ptr_vec);
        }
        pub type rad_particle_vec = root::__BindgenOpaqueArray<u64, 3usize>;
        #[repr(C)]
        pub struct _dummy_rad_particle_vec {
            pub inner: root::sdecay::rad_particle_vec,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay27std_vector_rad_particle_newEPSt6vectorIN11SandiaDecay11RadParticleESaIS2_EE"]
            pub fn std_vector_rad_particle_new(out: *mut root::sdecay::rad_particle_vec);
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay31std_vector_rad_particle_reserveEPSt6vectorIN11SandiaDecay11RadParticleESaIS2_EEm"]
            pub fn std_vector_rad_particle_reserve(
                self_: *mut root::sdecay::rad_particle_vec,
                capacity: usize,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay28std_vector_rad_particle_pushEPSt6vectorIN11SandiaDecay11RadParticleESaIS2_EEPS2_"]
            pub fn std_vector_rad_particle_push(
                self_: *mut root::sdecay::rad_particle_vec,
                item: *mut root::SandiaDecay::RadParticle,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay33std_vector_rad_particle_from_dataEPKN11SandiaDecay11RadParticleEmPSt6vectorIS1_SaIS1_EE"]
            pub fn std_vector_rad_particle_from_data(
                data: *const root::SandiaDecay::RadParticle,
                len: usize,
                out: *mut root::sdecay::rad_particle_vec,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay28std_vector_rad_particle_sizeEPKSt6vectorIN11SandiaDecay11RadParticleESaIS2_EE"]
            pub fn std_vector_rad_particle_size(
                self_: *const root::sdecay::rad_particle_vec,
            ) -> usize;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay29std_vector_rad_particle_emptyEPKSt6vectorIN11SandiaDecay11RadParticleESaIS2_EE"]
            pub fn std_vector_rad_particle_empty(
                self_: *const root::sdecay::rad_particle_vec,
            ) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay27std_vector_rad_particle_ptrEPKSt6vectorIN11SandiaDecay11RadParticleESaIS2_EE"]
            pub fn std_vector_rad_particle_ptr(
                self_: *const root::sdecay::rad_particle_vec,
            ) -> *const root::SandiaDecay::RadParticle;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay31std_vector_rad_particle_ptr_mutEPSt6vectorIN11SandiaDecay11RadParticleESaIS2_EE"]
            pub fn std_vector_rad_particle_ptr_mut(
                self_: *mut root::sdecay::rad_particle_vec,
            ) -> *mut root::SandiaDecay::RadParticle;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay32std_vector_rad_particle_destructEPSt6vectorIN11SandiaDecay11RadParticleESaIS2_EE"]
            pub fn std_vector_rad_particle_destruct(self_: *mut root::sdecay::rad_particle_vec);
        }
        pub type nuclide_abundance_pair_vec = root::__BindgenOpaqueArray<u64, 3usize>;
        #[repr(C)]
        pub struct _dummy_nuclide_abundance_pair_vec {
            pub inner: root::sdecay::nuclide_abundance_pair_vec,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay37std_vector_nuclide_abundance_pair_newEPSt6vectorIN11SandiaDecay20NuclideAbundancePairESaIS2_EE"]
            pub fn std_vector_nuclide_abundance_pair_new(
                out: *mut root::sdecay::nuclide_abundance_pair_vec,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay41std_vector_nuclide_abundance_pair_reserveEPSt6vectorIN11SandiaDecay20NuclideAbundancePairESaIS2_EEm"]
            pub fn std_vector_nuclide_abundance_pair_reserve(
                self_: *mut root::sdecay::nuclide_abundance_pair_vec,
                capacity: usize,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay38std_vector_nuclide_abundance_pair_pushEPSt6vectorIN11SandiaDecay20NuclideAbundancePairESaIS2_EEPS2_"]
            pub fn std_vector_nuclide_abundance_pair_push(
                self_: *mut root::sdecay::nuclide_abundance_pair_vec,
                item: *mut root::SandiaDecay::NuclideAbundancePair,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay43std_vector_nuclide_abundance_pair_from_dataEPKN11SandiaDecay20NuclideAbundancePairEmPSt6vectorIS1_SaIS1_EE"]
            pub fn std_vector_nuclide_abundance_pair_from_data(
                data: *const root::SandiaDecay::NuclideAbundancePair,
                len: usize,
                out: *mut root::sdecay::nuclide_abundance_pair_vec,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay38std_vector_nuclide_abundance_pair_sizeEPKSt6vectorIN11SandiaDecay20NuclideAbundancePairESaIS2_EE"]
            pub fn std_vector_nuclide_abundance_pair_size(
                self_: *const root::sdecay::nuclide_abundance_pair_vec,
            ) -> usize;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay39std_vector_nuclide_abundance_pair_emptyEPKSt6vectorIN11SandiaDecay20NuclideAbundancePairESaIS2_EE"]
            pub fn std_vector_nuclide_abundance_pair_empty(
                self_: *const root::sdecay::nuclide_abundance_pair_vec,
            ) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay37std_vector_nuclide_abundance_pair_ptrEPKSt6vectorIN11SandiaDecay20NuclideAbundancePairESaIS2_EE"]
            pub fn std_vector_nuclide_abundance_pair_ptr(
                self_: *const root::sdecay::nuclide_abundance_pair_vec,
            ) -> *const root::SandiaDecay::NuclideAbundancePair;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay41std_vector_nuclide_abundance_pair_ptr_mutEPSt6vectorIN11SandiaDecay20NuclideAbundancePairESaIS2_EE"]
            pub fn std_vector_nuclide_abundance_pair_ptr_mut(
                self_: *mut root::sdecay::nuclide_abundance_pair_vec,
            ) -> *mut root::SandiaDecay::NuclideAbundancePair;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay42std_vector_nuclide_abundance_pair_destructEPSt6vectorIN11SandiaDecay20NuclideAbundancePairESaIS2_EE"]
            pub fn std_vector_nuclide_abundance_pair_destruct(
                self_: *mut root::sdecay::nuclide_abundance_pair_vec,
            );
        }
        pub type nuclide_activity_pair_vec = root::__BindgenOpaqueArray<u64, 3usize>;
        #[repr(C)]
        pub struct _dummy_nuclide_activity_pair_vec {
            pub inner: root::sdecay::nuclide_activity_pair_vec,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay36std_vector_nuclide_activity_pair_newEPSt6vectorIN11SandiaDecay19NuclideActivityPairESaIS2_EE"]
            pub fn std_vector_nuclide_activity_pair_new(
                out: *mut root::sdecay::nuclide_activity_pair_vec,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay40std_vector_nuclide_activity_pair_reserveEPSt6vectorIN11SandiaDecay19NuclideActivityPairESaIS2_EEm"]
            pub fn std_vector_nuclide_activity_pair_reserve(
                self_: *mut root::sdecay::nuclide_activity_pair_vec,
                capacity: usize,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay37std_vector_nuclide_activity_pair_pushEPSt6vectorIN11SandiaDecay19NuclideActivityPairESaIS2_EEPS2_"]
            pub fn std_vector_nuclide_activity_pair_push(
                self_: *mut root::sdecay::nuclide_activity_pair_vec,
                item: *mut root::SandiaDecay::NuclideActivityPair,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay42std_vector_nuclide_activity_pair_from_dataEPKN11SandiaDecay19NuclideActivityPairEmPSt6vectorIS1_SaIS1_EE"]
            pub fn std_vector_nuclide_activity_pair_from_data(
                data: *const root::SandiaDecay::NuclideActivityPair,
                len: usize,
                out: *mut root::sdecay::nuclide_activity_pair_vec,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay37std_vector_nuclide_activity_pair_sizeEPKSt6vectorIN11SandiaDecay19NuclideActivityPairESaIS2_EE"]
            pub fn std_vector_nuclide_activity_pair_size(
                self_: *const root::sdecay::nuclide_activity_pair_vec,
            ) -> usize;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay38std_vector_nuclide_activity_pair_emptyEPKSt6vectorIN11SandiaDecay19NuclideActivityPairESaIS2_EE"]
            pub fn std_vector_nuclide_activity_pair_empty(
                self_: *const root::sdecay::nuclide_activity_pair_vec,
            ) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay36std_vector_nuclide_activity_pair_ptrEPKSt6vectorIN11SandiaDecay19NuclideActivityPairESaIS2_EE"]
            pub fn std_vector_nuclide_activity_pair_ptr(
                self_: *const root::sdecay::nuclide_activity_pair_vec,
            ) -> *const root::SandiaDecay::NuclideActivityPair;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay40std_vector_nuclide_activity_pair_ptr_mutEPSt6vectorIN11SandiaDecay19NuclideActivityPairESaIS2_EE"]
            pub fn std_vector_nuclide_activity_pair_ptr_mut(
                self_: *mut root::sdecay::nuclide_activity_pair_vec,
            ) -> *mut root::SandiaDecay::NuclideActivityPair;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay41std_vector_nuclide_activity_pair_destructEPSt6vectorIN11SandiaDecay19NuclideActivityPairESaIS2_EE"]
            pub fn std_vector_nuclide_activity_pair_destruct(
                self_: *mut root::sdecay::nuclide_activity_pair_vec,
            );
        }
        pub type nuclide_num_atoms_pair_vec = root::__BindgenOpaqueArray<u64, 3usize>;
        #[repr(C)]
        pub struct _dummy_nuclide_num_atoms_pair_vec {
            pub inner: root::sdecay::nuclide_num_atoms_pair_vec,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay37std_vector_nuclide_num_atoms_pair_newEPSt6vectorIN11SandiaDecay19NuclideNumAtomsPairESaIS2_EE"]
            pub fn std_vector_nuclide_num_atoms_pair_new(
                out: *mut root::sdecay::nuclide_num_atoms_pair_vec,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay41std_vector_nuclide_num_atoms_pair_reserveEPSt6vectorIN11SandiaDecay19NuclideNumAtomsPairESaIS2_EEm"]
            pub fn std_vector_nuclide_num_atoms_pair_reserve(
                self_: *mut root::sdecay::nuclide_num_atoms_pair_vec,
                capacity: usize,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay38std_vector_nuclide_num_atoms_pair_pushEPSt6vectorIN11SandiaDecay19NuclideNumAtomsPairESaIS2_EEPS2_"]
            pub fn std_vector_nuclide_num_atoms_pair_push(
                self_: *mut root::sdecay::nuclide_num_atoms_pair_vec,
                item: *mut root::SandiaDecay::NuclideNumAtomsPair,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay43std_vector_nuclide_num_atoms_pair_from_dataEPKN11SandiaDecay19NuclideNumAtomsPairEmPSt6vectorIS1_SaIS1_EE"]
            pub fn std_vector_nuclide_num_atoms_pair_from_data(
                data: *const root::SandiaDecay::NuclideNumAtomsPair,
                len: usize,
                out: *mut root::sdecay::nuclide_num_atoms_pair_vec,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay38std_vector_nuclide_num_atoms_pair_sizeEPKSt6vectorIN11SandiaDecay19NuclideNumAtomsPairESaIS2_EE"]
            pub fn std_vector_nuclide_num_atoms_pair_size(
                self_: *const root::sdecay::nuclide_num_atoms_pair_vec,
            ) -> usize;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay39std_vector_nuclide_num_atoms_pair_emptyEPKSt6vectorIN11SandiaDecay19NuclideNumAtomsPairESaIS2_EE"]
            pub fn std_vector_nuclide_num_atoms_pair_empty(
                self_: *const root::sdecay::nuclide_num_atoms_pair_vec,
            ) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay37std_vector_nuclide_num_atoms_pair_ptrEPKSt6vectorIN11SandiaDecay19NuclideNumAtomsPairESaIS2_EE"]
            pub fn std_vector_nuclide_num_atoms_pair_ptr(
                self_: *const root::sdecay::nuclide_num_atoms_pair_vec,
            ) -> *const root::SandiaDecay::NuclideNumAtomsPair;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay41std_vector_nuclide_num_atoms_pair_ptr_mutEPSt6vectorIN11SandiaDecay19NuclideNumAtomsPairESaIS2_EE"]
            pub fn std_vector_nuclide_num_atoms_pair_ptr_mut(
                self_: *mut root::sdecay::nuclide_num_atoms_pair_vec,
            ) -> *mut root::SandiaDecay::NuclideNumAtomsPair;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay42std_vector_nuclide_num_atoms_pair_destructEPSt6vectorIN11SandiaDecay19NuclideNumAtomsPairESaIS2_EE"]
            pub fn std_vector_nuclide_num_atoms_pair_destruct(
                self_: *mut root::sdecay::nuclide_num_atoms_pair_vec,
            );
        }
        pub type energy_intensity_pair_vec = root::__BindgenOpaqueArray<u64, 3usize>;
        #[repr(C)]
        pub struct _dummy_energy_intensity_pair_vec {
            pub inner: root::sdecay::energy_intensity_pair_vec,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay36std_vector_energy_intensity_pair_newEPSt6vectorIN11SandiaDecay19EnergyIntensityPairESaIS2_EE"]
            pub fn std_vector_energy_intensity_pair_new(
                out: *mut root::sdecay::energy_intensity_pair_vec,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay40std_vector_energy_intensity_pair_reserveEPSt6vectorIN11SandiaDecay19EnergyIntensityPairESaIS2_EEm"]
            pub fn std_vector_energy_intensity_pair_reserve(
                self_: *mut root::sdecay::energy_intensity_pair_vec,
                capacity: usize,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay37std_vector_energy_intensity_pair_pushEPSt6vectorIN11SandiaDecay19EnergyIntensityPairESaIS2_EEPS2_"]
            pub fn std_vector_energy_intensity_pair_push(
                self_: *mut root::sdecay::energy_intensity_pair_vec,
                item: *mut root::SandiaDecay::EnergyIntensityPair,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay42std_vector_energy_intensity_pair_from_dataEPKN11SandiaDecay19EnergyIntensityPairEmPSt6vectorIS1_SaIS1_EE"]
            pub fn std_vector_energy_intensity_pair_from_data(
                data: *const root::SandiaDecay::EnergyIntensityPair,
                len: usize,
                out: *mut root::sdecay::energy_intensity_pair_vec,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay37std_vector_energy_intensity_pair_sizeEPKSt6vectorIN11SandiaDecay19EnergyIntensityPairESaIS2_EE"]
            pub fn std_vector_energy_intensity_pair_size(
                self_: *const root::sdecay::energy_intensity_pair_vec,
            ) -> usize;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay38std_vector_energy_intensity_pair_emptyEPKSt6vectorIN11SandiaDecay19EnergyIntensityPairESaIS2_EE"]
            pub fn std_vector_energy_intensity_pair_empty(
                self_: *const root::sdecay::energy_intensity_pair_vec,
            ) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay36std_vector_energy_intensity_pair_ptrEPKSt6vectorIN11SandiaDecay19EnergyIntensityPairESaIS2_EE"]
            pub fn std_vector_energy_intensity_pair_ptr(
                self_: *const root::sdecay::energy_intensity_pair_vec,
            ) -> *const root::SandiaDecay::EnergyIntensityPair;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay40std_vector_energy_intensity_pair_ptr_mutEPSt6vectorIN11SandiaDecay19EnergyIntensityPairESaIS2_EE"]
            pub fn std_vector_energy_intensity_pair_ptr_mut(
                self_: *mut root::sdecay::energy_intensity_pair_vec,
            ) -> *mut root::SandiaDecay::EnergyIntensityPair;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay41std_vector_energy_intensity_pair_destructEPSt6vectorIN11SandiaDecay19EnergyIntensityPairESaIS2_EE"]
            pub fn std_vector_energy_intensity_pair_destruct(
                self_: *mut root::sdecay::energy_intensity_pair_vec,
            );
        }
        pub type energy_count_pair_vec = root::__BindgenOpaqueArray<u64, 3usize>;
        #[repr(C)]
        pub struct _dummy_energy_count_pair_vec {
            pub inner: root::sdecay::energy_count_pair_vec,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay32std_vector_energy_count_pair_newEPSt6vectorIN11SandiaDecay15EnergyCountPairESaIS2_EE"]
            pub fn std_vector_energy_count_pair_new(out: *mut root::sdecay::energy_count_pair_vec);
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay36std_vector_energy_count_pair_reserveEPSt6vectorIN11SandiaDecay15EnergyCountPairESaIS2_EEm"]
            pub fn std_vector_energy_count_pair_reserve(
                self_: *mut root::sdecay::energy_count_pair_vec,
                capacity: usize,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay33std_vector_energy_count_pair_pushEPSt6vectorIN11SandiaDecay15EnergyCountPairESaIS2_EEPS2_"]
            pub fn std_vector_energy_count_pair_push(
                self_: *mut root::sdecay::energy_count_pair_vec,
                item: *mut root::SandiaDecay::EnergyCountPair,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay38std_vector_energy_count_pair_from_dataEPKN11SandiaDecay15EnergyCountPairEmPSt6vectorIS1_SaIS1_EE"]
            pub fn std_vector_energy_count_pair_from_data(
                data: *const root::SandiaDecay::EnergyCountPair,
                len: usize,
                out: *mut root::sdecay::energy_count_pair_vec,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay33std_vector_energy_count_pair_sizeEPKSt6vectorIN11SandiaDecay15EnergyCountPairESaIS2_EE"]
            pub fn std_vector_energy_count_pair_size(
                self_: *const root::sdecay::energy_count_pair_vec,
            ) -> usize;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay34std_vector_energy_count_pair_emptyEPKSt6vectorIN11SandiaDecay15EnergyCountPairESaIS2_EE"]
            pub fn std_vector_energy_count_pair_empty(
                self_: *const root::sdecay::energy_count_pair_vec,
            ) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay32std_vector_energy_count_pair_ptrEPKSt6vectorIN11SandiaDecay15EnergyCountPairESaIS2_EE"]
            pub fn std_vector_energy_count_pair_ptr(
                self_: *const root::sdecay::energy_count_pair_vec,
            ) -> *const root::SandiaDecay::EnergyCountPair;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay36std_vector_energy_count_pair_ptr_mutEPSt6vectorIN11SandiaDecay15EnergyCountPairESaIS2_EE"]
            pub fn std_vector_energy_count_pair_ptr_mut(
                self_: *mut root::sdecay::energy_count_pair_vec,
            ) -> *mut root::SandiaDecay::EnergyCountPair;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay37std_vector_energy_count_pair_destructEPSt6vectorIN11SandiaDecay15EnergyCountPairESaIS2_EE"]
            pub fn std_vector_energy_count_pair_destruct(
                self_: *mut root::sdecay::energy_count_pair_vec,
            );
        }
        pub type energy_rate_pair_vec = root::__BindgenOpaqueArray<u64, 3usize>;
        #[repr(C)]
        pub struct _dummy_energy_rate_pair_vec {
            pub inner: root::sdecay::energy_rate_pair_vec,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay31std_vector_energy_rate_pair_newEPSt6vectorIN11SandiaDecay14EnergyRatePairESaIS2_EE"]
            pub fn std_vector_energy_rate_pair_new(out: *mut root::sdecay::energy_rate_pair_vec);
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay35std_vector_energy_rate_pair_reserveEPSt6vectorIN11SandiaDecay14EnergyRatePairESaIS2_EEm"]
            pub fn std_vector_energy_rate_pair_reserve(
                self_: *mut root::sdecay::energy_rate_pair_vec,
                capacity: usize,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay32std_vector_energy_rate_pair_pushEPSt6vectorIN11SandiaDecay14EnergyRatePairESaIS2_EEPS2_"]
            pub fn std_vector_energy_rate_pair_push(
                self_: *mut root::sdecay::energy_rate_pair_vec,
                item: *mut root::SandiaDecay::EnergyRatePair,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay37std_vector_energy_rate_pair_from_dataEPKN11SandiaDecay14EnergyRatePairEmPSt6vectorIS1_SaIS1_EE"]
            pub fn std_vector_energy_rate_pair_from_data(
                data: *const root::SandiaDecay::EnergyRatePair,
                len: usize,
                out: *mut root::sdecay::energy_rate_pair_vec,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay32std_vector_energy_rate_pair_sizeEPKSt6vectorIN11SandiaDecay14EnergyRatePairESaIS2_EE"]
            pub fn std_vector_energy_rate_pair_size(
                self_: *const root::sdecay::energy_rate_pair_vec,
            ) -> usize;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay33std_vector_energy_rate_pair_emptyEPKSt6vectorIN11SandiaDecay14EnergyRatePairESaIS2_EE"]
            pub fn std_vector_energy_rate_pair_empty(
                self_: *const root::sdecay::energy_rate_pair_vec,
            ) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay31std_vector_energy_rate_pair_ptrEPKSt6vectorIN11SandiaDecay14EnergyRatePairESaIS2_EE"]
            pub fn std_vector_energy_rate_pair_ptr(
                self_: *const root::sdecay::energy_rate_pair_vec,
            ) -> *const root::SandiaDecay::EnergyRatePair;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay35std_vector_energy_rate_pair_ptr_mutEPSt6vectorIN11SandiaDecay14EnergyRatePairESaIS2_EE"]
            pub fn std_vector_energy_rate_pair_ptr_mut(
                self_: *mut root::sdecay::energy_rate_pair_vec,
            ) -> *mut root::SandiaDecay::EnergyRatePair;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay36std_vector_energy_rate_pair_destructEPSt6vectorIN11SandiaDecay14EnergyRatePairESaIS2_EE"]
            pub fn std_vector_energy_rate_pair_destruct(
                self_: *mut root::sdecay::energy_rate_pair_vec,
            );
        }
        pub type nuclide_vec = root::__BindgenOpaqueArray<u64, 3usize>;
        #[repr(C)]
        pub struct _dummy_nuclide_vec {
            pub inner: root::sdecay::nuclide_vec,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay22std_vector_nuclide_newEPSt6vectorIN11SandiaDecay7NuclideESaIS2_EE"]
            pub fn std_vector_nuclide_new(out: *mut root::sdecay::nuclide_vec);
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay26std_vector_nuclide_reserveEPSt6vectorIN11SandiaDecay7NuclideESaIS2_EEm"]
            pub fn std_vector_nuclide_reserve(
                self_: *mut root::sdecay::nuclide_vec,
                capacity: usize,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay23std_vector_nuclide_pushEPSt6vectorIN11SandiaDecay7NuclideESaIS2_EEPS2_"]
            pub fn std_vector_nuclide_push(
                self_: *mut root::sdecay::nuclide_vec,
                item: *mut root::SandiaDecay::Nuclide,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay28std_vector_nuclide_from_dataEPKN11SandiaDecay7NuclideEmPSt6vectorIS1_SaIS1_EE"]
            pub fn std_vector_nuclide_from_data(
                data: *const root::SandiaDecay::Nuclide,
                len: usize,
                out: *mut root::sdecay::nuclide_vec,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay23std_vector_nuclide_sizeEPKSt6vectorIN11SandiaDecay7NuclideESaIS2_EE"]
            pub fn std_vector_nuclide_size(self_: *const root::sdecay::nuclide_vec) -> usize;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay24std_vector_nuclide_emptyEPKSt6vectorIN11SandiaDecay7NuclideESaIS2_EE"]
            pub fn std_vector_nuclide_empty(self_: *const root::sdecay::nuclide_vec) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay22std_vector_nuclide_ptrEPKSt6vectorIN11SandiaDecay7NuclideESaIS2_EE"]
            pub fn std_vector_nuclide_ptr(
                self_: *const root::sdecay::nuclide_vec,
            ) -> *const root::SandiaDecay::Nuclide;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay26std_vector_nuclide_ptr_mutEPSt6vectorIN11SandiaDecay7NuclideESaIS2_EE"]
            pub fn std_vector_nuclide_ptr_mut(
                self_: *mut root::sdecay::nuclide_vec,
            ) -> *mut root::SandiaDecay::Nuclide;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay27std_vector_nuclide_destructEPSt6vectorIN11SandiaDecay7NuclideESaIS2_EE"]
            pub fn std_vector_nuclide_destruct(self_: *mut root::sdecay::nuclide_vec);
        }
        pub type nuclide_ref_vec = root::__BindgenOpaqueArray<u64, 3usize>;
        #[repr(C)]
        pub struct _dummy_nuclide_ref_vec {
            pub inner: root::sdecay::nuclide_ref_vec,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay26std_vector_nuclide_ref_newEPSt6vectorIPKN11SandiaDecay7NuclideESaIS4_EE"]
            pub fn std_vector_nuclide_ref_new(out: *mut root::sdecay::nuclide_ref_vec);
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay30std_vector_nuclide_ref_reserveEPSt6vectorIPKN11SandiaDecay7NuclideESaIS4_EEm"]
            pub fn std_vector_nuclide_ref_reserve(
                self_: *mut root::sdecay::nuclide_ref_vec,
                capacity: usize,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay27std_vector_nuclide_ref_pushEPSt6vectorIPKN11SandiaDecay7NuclideESaIS4_EEPS4_"]
            pub fn std_vector_nuclide_ref_push(
                self_: *mut root::sdecay::nuclide_ref_vec,
                item: *mut *const root::SandiaDecay::Nuclide,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay32std_vector_nuclide_ref_from_dataEPKPKN11SandiaDecay7NuclideEmPSt6vectorIS3_SaIS3_EE"]
            pub fn std_vector_nuclide_ref_from_data(
                data: *const *const root::SandiaDecay::Nuclide,
                len: usize,
                out: *mut root::sdecay::nuclide_ref_vec,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay27std_vector_nuclide_ref_sizeEPKSt6vectorIPKN11SandiaDecay7NuclideESaIS4_EE"]
            pub fn std_vector_nuclide_ref_size(
                self_: *const root::sdecay::nuclide_ref_vec,
            ) -> usize;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay28std_vector_nuclide_ref_emptyEPKSt6vectorIPKN11SandiaDecay7NuclideESaIS4_EE"]
            pub fn std_vector_nuclide_ref_empty(
                self_: *const root::sdecay::nuclide_ref_vec,
            ) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay26std_vector_nuclide_ref_ptrEPKSt6vectorIPKN11SandiaDecay7NuclideESaIS4_EE"]
            pub fn std_vector_nuclide_ref_ptr(
                self_: *const root::sdecay::nuclide_ref_vec,
            ) -> *const *const root::SandiaDecay::Nuclide;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay30std_vector_nuclide_ref_ptr_mutEPSt6vectorIPKN11SandiaDecay7NuclideESaIS4_EE"]
            pub fn std_vector_nuclide_ref_ptr_mut(
                self_: *mut root::sdecay::nuclide_ref_vec,
            ) -> *mut *const root::SandiaDecay::Nuclide;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay31std_vector_nuclide_ref_destructEPSt6vectorIPKN11SandiaDecay7NuclideESaIS4_EE"]
            pub fn std_vector_nuclide_ref_destruct(self_: *mut root::sdecay::nuclide_ref_vec);
        }
        pub type nuclide_raw_ptr_vec = root::__BindgenOpaqueArray<u64, 3usize>;
        #[repr(C)]
        pub struct _dummy_nuclide_raw_ptr_vec {
            pub inner: root::sdecay::nuclide_raw_ptr_vec,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay30std_vector_nuclide_raw_ptr_newEPSt6vectorIPKN11SandiaDecay7NuclideESaIS4_EE"]
            pub fn std_vector_nuclide_raw_ptr_new(out: *mut root::sdecay::nuclide_raw_ptr_vec);
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay34std_vector_nuclide_raw_ptr_reserveEPSt6vectorIPKN11SandiaDecay7NuclideESaIS4_EEm"]
            pub fn std_vector_nuclide_raw_ptr_reserve(
                self_: *mut root::sdecay::nuclide_raw_ptr_vec,
                capacity: usize,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay31std_vector_nuclide_raw_ptr_pushEPSt6vectorIPKN11SandiaDecay7NuclideESaIS4_EEPS4_"]
            pub fn std_vector_nuclide_raw_ptr_push(
                self_: *mut root::sdecay::nuclide_raw_ptr_vec,
                item: *mut *const root::SandiaDecay::Nuclide,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay36std_vector_nuclide_raw_ptr_from_dataEPKPKN11SandiaDecay7NuclideEmPSt6vectorIS3_SaIS3_EE"]
            pub fn std_vector_nuclide_raw_ptr_from_data(
                data: *const *const root::SandiaDecay::Nuclide,
                len: usize,
                out: *mut root::sdecay::nuclide_raw_ptr_vec,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay31std_vector_nuclide_raw_ptr_sizeEPKSt6vectorIPKN11SandiaDecay7NuclideESaIS4_EE"]
            pub fn std_vector_nuclide_raw_ptr_size(
                self_: *const root::sdecay::nuclide_raw_ptr_vec,
            ) -> usize;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay32std_vector_nuclide_raw_ptr_emptyEPKSt6vectorIPKN11SandiaDecay7NuclideESaIS4_EE"]
            pub fn std_vector_nuclide_raw_ptr_empty(
                self_: *const root::sdecay::nuclide_raw_ptr_vec,
            ) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay30std_vector_nuclide_raw_ptr_ptrEPKSt6vectorIPKN11SandiaDecay7NuclideESaIS4_EE"]
            pub fn std_vector_nuclide_raw_ptr_ptr(
                self_: *const root::sdecay::nuclide_raw_ptr_vec,
            ) -> *const *const root::SandiaDecay::Nuclide;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay34std_vector_nuclide_raw_ptr_ptr_mutEPSt6vectorIPKN11SandiaDecay7NuclideESaIS4_EE"]
            pub fn std_vector_nuclide_raw_ptr_ptr_mut(
                self_: *mut root::sdecay::nuclide_raw_ptr_vec,
            ) -> *mut *const root::SandiaDecay::Nuclide;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay35std_vector_nuclide_raw_ptr_destructEPSt6vectorIPKN11SandiaDecay7NuclideESaIS4_EE"]
            pub fn std_vector_nuclide_raw_ptr_destruct(
                self_: *mut root::sdecay::nuclide_raw_ptr_vec,
            );
        }
        pub type element_vec = root::__BindgenOpaqueArray<u64, 3usize>;
        #[repr(C)]
        pub struct _dummy_element_vec {
            pub inner: root::sdecay::element_vec,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay22std_vector_element_newEPSt6vectorIN11SandiaDecay7ElementESaIS2_EE"]
            pub fn std_vector_element_new(out: *mut root::sdecay::element_vec);
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay26std_vector_element_reserveEPSt6vectorIN11SandiaDecay7ElementESaIS2_EEm"]
            pub fn std_vector_element_reserve(
                self_: *mut root::sdecay::element_vec,
                capacity: usize,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay23std_vector_element_pushEPSt6vectorIN11SandiaDecay7ElementESaIS2_EEPS2_"]
            pub fn std_vector_element_push(
                self_: *mut root::sdecay::element_vec,
                item: *mut root::SandiaDecay::Element,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay28std_vector_element_from_dataEPKN11SandiaDecay7ElementEmPSt6vectorIS1_SaIS1_EE"]
            pub fn std_vector_element_from_data(
                data: *const root::SandiaDecay::Element,
                len: usize,
                out: *mut root::sdecay::element_vec,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay23std_vector_element_sizeEPKSt6vectorIN11SandiaDecay7ElementESaIS2_EE"]
            pub fn std_vector_element_size(self_: *const root::sdecay::element_vec) -> usize;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay24std_vector_element_emptyEPKSt6vectorIN11SandiaDecay7ElementESaIS2_EE"]
            pub fn std_vector_element_empty(self_: *const root::sdecay::element_vec) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay22std_vector_element_ptrEPKSt6vectorIN11SandiaDecay7ElementESaIS2_EE"]
            pub fn std_vector_element_ptr(
                self_: *const root::sdecay::element_vec,
            ) -> *const root::SandiaDecay::Element;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay26std_vector_element_ptr_mutEPSt6vectorIN11SandiaDecay7ElementESaIS2_EE"]
            pub fn std_vector_element_ptr_mut(
                self_: *mut root::sdecay::element_vec,
            ) -> *mut root::SandiaDecay::Element;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay27std_vector_element_destructEPSt6vectorIN11SandiaDecay7ElementESaIS2_EE"]
            pub fn std_vector_element_destruct(self_: *mut root::sdecay::element_vec);
        }
        pub type element_raw_ptr_vec = root::__BindgenOpaqueArray<u64, 3usize>;
        #[repr(C)]
        pub struct _dummy_element_raw_ptr_vec {
            pub inner: root::sdecay::element_raw_ptr_vec,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay30std_vector_element_raw_ptr_newEPSt6vectorIPKN11SandiaDecay7ElementESaIS4_EE"]
            pub fn std_vector_element_raw_ptr_new(out: *mut root::sdecay::element_raw_ptr_vec);
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay34std_vector_element_raw_ptr_reserveEPSt6vectorIPKN11SandiaDecay7ElementESaIS4_EEm"]
            pub fn std_vector_element_raw_ptr_reserve(
                self_: *mut root::sdecay::element_raw_ptr_vec,
                capacity: usize,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay31std_vector_element_raw_ptr_pushEPSt6vectorIPKN11SandiaDecay7ElementESaIS4_EEPS4_"]
            pub fn std_vector_element_raw_ptr_push(
                self_: *mut root::sdecay::element_raw_ptr_vec,
                item: *mut *const root::SandiaDecay::Element,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay36std_vector_element_raw_ptr_from_dataEPKPKN11SandiaDecay7ElementEmPSt6vectorIS3_SaIS3_EE"]
            pub fn std_vector_element_raw_ptr_from_data(
                data: *const *const root::SandiaDecay::Element,
                len: usize,
                out: *mut root::sdecay::element_raw_ptr_vec,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay31std_vector_element_raw_ptr_sizeEPKSt6vectorIPKN11SandiaDecay7ElementESaIS4_EE"]
            pub fn std_vector_element_raw_ptr_size(
                self_: *const root::sdecay::element_raw_ptr_vec,
            ) -> usize;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay32std_vector_element_raw_ptr_emptyEPKSt6vectorIPKN11SandiaDecay7ElementESaIS4_EE"]
            pub fn std_vector_element_raw_ptr_empty(
                self_: *const root::sdecay::element_raw_ptr_vec,
            ) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay30std_vector_element_raw_ptr_ptrEPKSt6vectorIPKN11SandiaDecay7ElementESaIS4_EE"]
            pub fn std_vector_element_raw_ptr_ptr(
                self_: *const root::sdecay::element_raw_ptr_vec,
            ) -> *const *const root::SandiaDecay::Element;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay34std_vector_element_raw_ptr_ptr_mutEPSt6vectorIPKN11SandiaDecay7ElementESaIS4_EE"]
            pub fn std_vector_element_raw_ptr_ptr_mut(
                self_: *mut root::sdecay::element_raw_ptr_vec,
            ) -> *mut *const root::SandiaDecay::Element;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay35std_vector_element_raw_ptr_destructEPSt6vectorIPKN11SandiaDecay7ElementESaIS4_EE"]
            pub fn std_vector_element_raw_ptr_destruct(
                self_: *mut root::sdecay::element_raw_ptr_vec,
            );
        }
        pub type element_ref_vec = root::__BindgenOpaqueArray<u64, 3usize>;
        #[repr(C)]
        pub struct _dummy_element_ref_vec {
            pub inner: root::sdecay::element_ref_vec,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay26std_vector_element_ref_newEPSt6vectorIPKN11SandiaDecay7ElementESaIS4_EE"]
            pub fn std_vector_element_ref_new(out: *mut root::sdecay::element_ref_vec);
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay30std_vector_element_ref_reserveEPSt6vectorIPKN11SandiaDecay7ElementESaIS4_EEm"]
            pub fn std_vector_element_ref_reserve(
                self_: *mut root::sdecay::element_ref_vec,
                capacity: usize,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay27std_vector_element_ref_pushEPSt6vectorIPKN11SandiaDecay7ElementESaIS4_EEPS4_"]
            pub fn std_vector_element_ref_push(
                self_: *mut root::sdecay::element_ref_vec,
                item: *mut *const root::SandiaDecay::Element,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay32std_vector_element_ref_from_dataEPKPKN11SandiaDecay7ElementEmPSt6vectorIS3_SaIS3_EE"]
            pub fn std_vector_element_ref_from_data(
                data: *const *const root::SandiaDecay::Element,
                len: usize,
                out: *mut root::sdecay::element_ref_vec,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay27std_vector_element_ref_sizeEPKSt6vectorIPKN11SandiaDecay7ElementESaIS4_EE"]
            pub fn std_vector_element_ref_size(
                self_: *const root::sdecay::element_ref_vec,
            ) -> usize;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay28std_vector_element_ref_emptyEPKSt6vectorIPKN11SandiaDecay7ElementESaIS4_EE"]
            pub fn std_vector_element_ref_empty(
                self_: *const root::sdecay::element_ref_vec,
            ) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay26std_vector_element_ref_ptrEPKSt6vectorIPKN11SandiaDecay7ElementESaIS4_EE"]
            pub fn std_vector_element_ref_ptr(
                self_: *const root::sdecay::element_ref_vec,
            ) -> *const *const root::SandiaDecay::Element;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay30std_vector_element_ref_ptr_mutEPSt6vectorIPKN11SandiaDecay7ElementESaIS4_EE"]
            pub fn std_vector_element_ref_ptr_mut(
                self_: *mut root::sdecay::element_ref_vec,
            ) -> *mut *const root::SandiaDecay::Element;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay31std_vector_element_ref_destructEPSt6vectorIPKN11SandiaDecay7ElementESaIS4_EE"]
            pub fn std_vector_element_ref_destruct(self_: *mut root::sdecay::element_ref_vec);
        }
        pub type CoincidencePair = root::__BindgenOpaqueArray<u32, 2usize>;
        pub type coincidence_pair_vec = root::__BindgenOpaqueArray<u64, 3usize>;
        #[repr(C)]
        pub struct _dummy_coincidence_pair_vec {
            pub inner: root::sdecay::coincidence_pair_vec,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay31std_vector_coincidence_pair_newEPSt6vectorISt4pairItfESaIS2_EE"]
            pub fn std_vector_coincidence_pair_new(out: *mut root::sdecay::coincidence_pair_vec);
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay35std_vector_coincidence_pair_reserveEPSt6vectorISt4pairItfESaIS2_EEm"]
            pub fn std_vector_coincidence_pair_reserve(
                self_: *mut root::sdecay::coincidence_pair_vec,
                capacity: usize,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay32std_vector_coincidence_pair_pushEPSt6vectorISt4pairItfESaIS2_EEPS2_"]
            pub fn std_vector_coincidence_pair_push(
                self_: *mut root::sdecay::coincidence_pair_vec,
                item: *mut root::sdecay::CoincidencePair,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay37std_vector_coincidence_pair_from_dataEPKSt4pairItfEmPSt6vectorIS1_SaIS1_EE"]
            pub fn std_vector_coincidence_pair_from_data(
                data: *const root::sdecay::CoincidencePair,
                len: usize,
                out: *mut root::sdecay::coincidence_pair_vec,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay32std_vector_coincidence_pair_sizeEPKSt6vectorISt4pairItfESaIS2_EE"]
            pub fn std_vector_coincidence_pair_size(
                self_: *const root::sdecay::coincidence_pair_vec,
            ) -> usize;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay33std_vector_coincidence_pair_emptyEPKSt6vectorISt4pairItfESaIS2_EE"]
            pub fn std_vector_coincidence_pair_empty(
                self_: *const root::sdecay::coincidence_pair_vec,
            ) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay31std_vector_coincidence_pair_ptrEPKSt6vectorISt4pairItfESaIS2_EE"]
            pub fn std_vector_coincidence_pair_ptr(
                self_: *const root::sdecay::coincidence_pair_vec,
            ) -> *const root::sdecay::CoincidencePair;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay35std_vector_coincidence_pair_ptr_mutEPSt6vectorISt4pairItfESaIS2_EE"]
            pub fn std_vector_coincidence_pair_ptr_mut(
                self_: *mut root::sdecay::coincidence_pair_vec,
            ) -> *mut root::sdecay::CoincidencePair;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay36std_vector_coincidence_pair_destructEPSt6vectorISt4pairItfESaIS2_EE"]
            pub fn std_vector_coincidence_pair_destruct(
                self_: *mut root::sdecay::coincidence_pair_vec,
            );
        }
        pub type time_evolution_term_vec = root::__BindgenOpaqueArray<u64, 3usize>;
        #[repr(C)]
        pub struct _dummy_time_evolution_term_vec {
            pub inner: root::sdecay::time_evolution_term_vec,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay34std_vector_time_evolution_term_newEPSt6vectorIN11SandiaDecay17TimeEvolutionTermESaIS2_EE"]
            pub fn std_vector_time_evolution_term_new(
                out: *mut root::sdecay::time_evolution_term_vec,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay38std_vector_time_evolution_term_reserveEPSt6vectorIN11SandiaDecay17TimeEvolutionTermESaIS2_EEm"]
            pub fn std_vector_time_evolution_term_reserve(
                self_: *mut root::sdecay::time_evolution_term_vec,
                capacity: usize,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay35std_vector_time_evolution_term_pushEPSt6vectorIN11SandiaDecay17TimeEvolutionTermESaIS2_EEPS2_"]
            pub fn std_vector_time_evolution_term_push(
                self_: *mut root::sdecay::time_evolution_term_vec,
                item: *mut root::SandiaDecay::TimeEvolutionTerm,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay40std_vector_time_evolution_term_from_dataEPKN11SandiaDecay17TimeEvolutionTermEmPSt6vectorIS1_SaIS1_EE"]
            pub fn std_vector_time_evolution_term_from_data(
                data: *const root::SandiaDecay::TimeEvolutionTerm,
                len: usize,
                out: *mut root::sdecay::time_evolution_term_vec,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay35std_vector_time_evolution_term_sizeEPKSt6vectorIN11SandiaDecay17TimeEvolutionTermESaIS2_EE"]
            pub fn std_vector_time_evolution_term_size(
                self_: *const root::sdecay::time_evolution_term_vec,
            ) -> usize;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay36std_vector_time_evolution_term_emptyEPKSt6vectorIN11SandiaDecay17TimeEvolutionTermESaIS2_EE"]
            pub fn std_vector_time_evolution_term_empty(
                self_: *const root::sdecay::time_evolution_term_vec,
            ) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay34std_vector_time_evolution_term_ptrEPKSt6vectorIN11SandiaDecay17TimeEvolutionTermESaIS2_EE"]
            pub fn std_vector_time_evolution_term_ptr(
                self_: *const root::sdecay::time_evolution_term_vec,
            ) -> *const root::SandiaDecay::TimeEvolutionTerm;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay38std_vector_time_evolution_term_ptr_mutEPSt6vectorIN11SandiaDecay17TimeEvolutionTermESaIS2_EE"]
            pub fn std_vector_time_evolution_term_ptr_mut(
                self_: *mut root::sdecay::time_evolution_term_vec,
            ) -> *mut root::SandiaDecay::TimeEvolutionTerm;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay39std_vector_time_evolution_term_destructEPSt6vectorIN11SandiaDecay17TimeEvolutionTermESaIS2_EE"]
            pub fn std_vector_time_evolution_term_destruct(
                self_: *mut root::sdecay::time_evolution_term_vec,
            );
        }
        pub type nuclide_time_evolution_vec = root::__BindgenOpaqueArray<u64, 3usize>;
        #[repr(C)]
        pub struct _dummy_nuclide_time_evolution_vec {
            pub inner: root::sdecay::nuclide_time_evolution_vec,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay37std_vector_nuclide_time_evolution_newEPSt6vectorIN11SandiaDecay20NuclideTimeEvolutionESaIS2_EE"]
            pub fn std_vector_nuclide_time_evolution_new(
                out: *mut root::sdecay::nuclide_time_evolution_vec,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay41std_vector_nuclide_time_evolution_reserveEPSt6vectorIN11SandiaDecay20NuclideTimeEvolutionESaIS2_EEm"]
            pub fn std_vector_nuclide_time_evolution_reserve(
                self_: *mut root::sdecay::nuclide_time_evolution_vec,
                capacity: usize,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay38std_vector_nuclide_time_evolution_pushEPSt6vectorIN11SandiaDecay20NuclideTimeEvolutionESaIS2_EEPS2_"]
            pub fn std_vector_nuclide_time_evolution_push(
                self_: *mut root::sdecay::nuclide_time_evolution_vec,
                item: *mut root::SandiaDecay::NuclideTimeEvolution,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay43std_vector_nuclide_time_evolution_from_dataEPKN11SandiaDecay20NuclideTimeEvolutionEmPSt6vectorIS1_SaIS1_EE"]
            pub fn std_vector_nuclide_time_evolution_from_data(
                data: *const root::SandiaDecay::NuclideTimeEvolution,
                len: usize,
                out: *mut root::sdecay::nuclide_time_evolution_vec,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay38std_vector_nuclide_time_evolution_sizeEPKSt6vectorIN11SandiaDecay20NuclideTimeEvolutionESaIS2_EE"]
            pub fn std_vector_nuclide_time_evolution_size(
                self_: *const root::sdecay::nuclide_time_evolution_vec,
            ) -> usize;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay39std_vector_nuclide_time_evolution_emptyEPKSt6vectorIN11SandiaDecay20NuclideTimeEvolutionESaIS2_EE"]
            pub fn std_vector_nuclide_time_evolution_empty(
                self_: *const root::sdecay::nuclide_time_evolution_vec,
            ) -> bool;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay37std_vector_nuclide_time_evolution_ptrEPKSt6vectorIN11SandiaDecay20NuclideTimeEvolutionESaIS2_EE"]
            pub fn std_vector_nuclide_time_evolution_ptr(
                self_: *const root::sdecay::nuclide_time_evolution_vec,
            ) -> *const root::SandiaDecay::NuclideTimeEvolution;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay41std_vector_nuclide_time_evolution_ptr_mutEPSt6vectorIN11SandiaDecay20NuclideTimeEvolutionESaIS2_EE"]
            pub fn std_vector_nuclide_time_evolution_ptr_mut(
                self_: *mut root::sdecay::nuclide_time_evolution_vec,
            ) -> *mut root::SandiaDecay::NuclideTimeEvolution;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay42std_vector_nuclide_time_evolution_destructEPSt6vectorIN11SandiaDecay20NuclideTimeEvolutionESaIS2_EE"]
            pub fn std_vector_nuclide_time_evolution_destruct(
                self_: *mut root::sdecay::nuclide_time_evolution_vec,
            );
        }
        #[repr(C)]
        pub struct Exception {
            pub inner: u64,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZNK6sdecay9Exception4whatEv"]
            pub fn Exception_what(
                this: *const root::sdecay::Exception,
            ) -> *const ::core::ffi::c_char;
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay9ExceptionC1ESt9exception"]
            pub fn Exception_Exception(
                this: *mut root::sdecay::Exception,
                ex: root::std::exception,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay9ExceptionD1Ev"]
            pub fn Exception_Exception_destructor(this: *mut root::sdecay::Exception);
        }
        impl Exception {
            #[inline]
            pub unsafe fn what(&self) -> *const ::core::ffi::c_char {
                Exception_what(self)
            }
            #[inline]
            pub unsafe fn new(ex: root::std::exception) -> Self {
                let mut __bindgen_tmp = ::core::mem::MaybeUninit::uninit();
                Exception_Exception(__bindgen_tmp.as_mut_ptr(), ex);
                __bindgen_tmp.assume_init()
            }
            #[inline]
            pub unsafe fn destruct(&mut self) {
                Exception_Exception_destructor(self)
            }
        }
        #[repr(C)]
        pub struct Unit {
            pub _address: u8,
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay13move_databaseEPN11SandiaDecay19SandiaDecayDataBaseEPKS1_"]
            pub fn move_database(
                dst: *mut root::SandiaDecay::SandiaDecayDataBase,
                src: *const root::SandiaDecay::SandiaDecayDataBase,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay12move_mixtureEPN11SandiaDecay14NuclideMixtureEPKS1_"]
            pub fn move_mixture(
                dst: *mut root::SandiaDecay::NuclideMixture,
                src: *const root::SandiaDecay::NuclideMixture,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay11move_stringEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKS5_"]
            pub fn move_string(dst: *mut root::std::string, src: *const root::std::string);
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay12move_nuclideEPN11SandiaDecay7NuclideEPKS1_"]
            pub fn move_nuclide(
                dst: *mut root::SandiaDecay::Nuclide,
                src: *const root::SandiaDecay::Nuclide,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay15move_transitionEPN11SandiaDecay10TransitionEPKS1_"]
            pub fn move_transition(
                dst: *mut root::SandiaDecay::Transition,
                src: *const root::SandiaDecay::Transition,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay17move_rad_particleEPN11SandiaDecay11RadParticleEPKS1_"]
            pub fn move_rad_particle(
                dst: *mut root::SandiaDecay::RadParticle,
                src: *const root::SandiaDecay::RadParticle,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay27move_nuclide_abundance_pairEPN11SandiaDecay20NuclideAbundancePairEPKS1_"]
            pub fn move_nuclide_abundance_pair(
                dst: *mut root::SandiaDecay::NuclideAbundancePair,
                src: *const root::SandiaDecay::NuclideAbundancePair,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay26move_nuclide_activity_pairEPN11SandiaDecay19NuclideActivityPairEPKS1_"]
            pub fn move_nuclide_activity_pair(
                dst: *mut root::SandiaDecay::NuclideActivityPair,
                src: *const root::SandiaDecay::NuclideActivityPair,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay27move_nuclide_num_atoms_pairEPN11SandiaDecay19NuclideNumAtomsPairEPKS1_"]
            pub fn move_nuclide_num_atoms_pair(
                dst: *mut root::SandiaDecay::NuclideNumAtomsPair,
                src: *const root::SandiaDecay::NuclideNumAtomsPair,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay26move_energy_intensity_pairEPN11SandiaDecay19EnergyIntensityPairEPKS1_"]
            pub fn move_energy_intensity_pair(
                dst: *mut root::SandiaDecay::EnergyIntensityPair,
                src: *const root::SandiaDecay::EnergyIntensityPair,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay22move_energy_count_pairEPN11SandiaDecay15EnergyCountPairEPKS1_"]
            pub fn move_energy_count_pair(
                dst: *mut root::SandiaDecay::EnergyCountPair,
                src: *const root::SandiaDecay::EnergyCountPair,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay21move_energy_rate_pairEPN11SandiaDecay14EnergyRatePairEPKS1_"]
            pub fn move_energy_rate_pair(
                dst: *mut root::SandiaDecay::EnergyRatePair,
                src: *const root::SandiaDecay::EnergyRatePair,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay12move_elementEPN11SandiaDecay7ElementEPKS1_"]
            pub fn move_element(
                dst: *mut root::SandiaDecay::Element,
                src: *const root::SandiaDecay::Element,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay24move_time_evolution_termEPN11SandiaDecay17TimeEvolutionTermEPKS1_"]
            pub fn move_time_evolution_term(
                dst: *mut root::SandiaDecay::TimeEvolutionTerm,
                src: *const root::SandiaDecay::TimeEvolutionTerm,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay27move_nuclide_time_evolutionEPN11SandiaDecay20NuclideTimeEvolutionEPKS1_"]
            pub fn move_nuclide_time_evolution(
                dst: *mut root::SandiaDecay::NuclideTimeEvolution,
                src: *const root::SandiaDecay::NuclideTimeEvolution,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay13move_char_vecEPSt6vectorIcSaIcEEPKS2_"]
            pub fn move_char_vec(
                dst: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                src: *const root::__BindgenOpaqueArray<u64, 3usize>,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay19move_transition_vecEPSt6vectorIN11SandiaDecay10TransitionESaIS2_EEPKS4_"]
            pub fn move_transition_vec(
                dst: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                src: *const root::__BindgenOpaqueArray<u64, 3usize>,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay23move_transition_ptr_vecEPSt6vectorIPKN11SandiaDecay10TransitionESaIS4_EEPKS6_"]
            pub fn move_transition_ptr_vec(
                dst: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                src: *const root::__BindgenOpaqueArray<u64, 3usize>,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay21move_rad_particle_vecEPSt6vectorIN11SandiaDecay11RadParticleESaIS2_EEPKS4_"]
            pub fn move_rad_particle_vec(
                dst: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                src: *const root::__BindgenOpaqueArray<u64, 3usize>,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay31move_nuclide_abundance_pair_vecEPSt6vectorIN11SandiaDecay20NuclideAbundancePairESaIS2_EEPKS4_"]
            pub fn move_nuclide_abundance_pair_vec(
                dst: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                src: *const root::__BindgenOpaqueArray<u64, 3usize>,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay30move_nuclide_activity_pair_vecEPSt6vectorIN11SandiaDecay19NuclideActivityPairESaIS2_EEPKS4_"]
            pub fn move_nuclide_activity_pair_vec(
                dst: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                src: *const root::__BindgenOpaqueArray<u64, 3usize>,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay31move_nuclide_num_atoms_pair_vecEPSt6vectorIN11SandiaDecay19NuclideNumAtomsPairESaIS2_EEPKS4_"]
            pub fn move_nuclide_num_atoms_pair_vec(
                dst: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                src: *const root::__BindgenOpaqueArray<u64, 3usize>,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay30move_energy_intensity_pair_vecEPSt6vectorIN11SandiaDecay19EnergyIntensityPairESaIS2_EEPKS4_"]
            pub fn move_energy_intensity_pair_vec(
                dst: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                src: *const root::__BindgenOpaqueArray<u64, 3usize>,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay26move_energy_count_pair_vecEPSt6vectorIN11SandiaDecay15EnergyCountPairESaIS2_EEPKS4_"]
            pub fn move_energy_count_pair_vec(
                dst: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                src: *const root::__BindgenOpaqueArray<u64, 3usize>,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay25move_energy_rate_pair_vecEPSt6vectorIN11SandiaDecay14EnergyRatePairESaIS2_EEPKS4_"]
            pub fn move_energy_rate_pair_vec(
                dst: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                src: *const root::__BindgenOpaqueArray<u64, 3usize>,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay16move_nuclide_vecEPSt6vectorIN11SandiaDecay7NuclideESaIS2_EEPKS4_"]
            pub fn move_nuclide_vec(
                dst: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                src: *const root::__BindgenOpaqueArray<u64, 3usize>,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay20move_nuclide_ref_vecEPSt6vectorIPKN11SandiaDecay7NuclideESaIS4_EEPKS6_"]
            pub fn move_nuclide_ref_vec(
                dst: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                src: *const root::__BindgenOpaqueArray<u64, 3usize>,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay24move_nuclide_raw_ptr_vecEPSt6vectorIPKN11SandiaDecay7NuclideESaIS4_EEPKS6_"]
            pub fn move_nuclide_raw_ptr_vec(
                dst: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                src: *const root::__BindgenOpaqueArray<u64, 3usize>,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay16move_element_vecEPSt6vectorIN11SandiaDecay7ElementESaIS2_EEPKS4_"]
            pub fn move_element_vec(
                dst: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                src: *const root::__BindgenOpaqueArray<u64, 3usize>,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay24move_element_raw_ptr_vecEPSt6vectorIPKN11SandiaDecay7ElementESaIS4_EEPKS6_"]
            pub fn move_element_raw_ptr_vec(
                dst: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                src: *const root::__BindgenOpaqueArray<u64, 3usize>,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay20move_element_ref_vecEPSt6vectorIPKN11SandiaDecay7ElementESaIS4_EEPKS6_"]
            pub fn move_element_ref_vec(
                dst: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                src: *const root::__BindgenOpaqueArray<u64, 3usize>,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay25move_coincidence_pair_vecEPSt6vectorISt4pairItfESaIS2_EEPKS4_"]
            pub fn move_coincidence_pair_vec(
                dst: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                src: *const root::__BindgenOpaqueArray<u64, 3usize>,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay28move_time_evolution_term_vecEPSt6vectorIN11SandiaDecay17TimeEvolutionTermESaIS2_EEPKS4_"]
            pub fn move_time_evolution_term_vec(
                dst: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                src: *const root::__BindgenOpaqueArray<u64, 3usize>,
            );
        }
        unsafe extern "C" {
            #[link_name = "\u{1}_ZN6sdecay31move_nuclide_time_evolution_vecEPSt6vectorIN11SandiaDecay20NuclideTimeEvolutionESaIS2_EEPKS4_"]
            pub fn move_nuclide_time_evolution_vec(
                dst: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                src: *const root::__BindgenOpaqueArray<u64, 3usize>,
            );
        }
        pub mod database {
            #[allow(unused_imports)]
            use self::super::super::super::root;
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay8database17try_init_databaseEPNS_4UnitEPNS_9ExceptionEPN11SandiaDecay19SandiaDecayDataBaseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"]
                pub fn try_init_database(
                    out: *mut root::sdecay::Unit,
                    error: *mut root::sdecay::Exception,
                    database: *mut root::SandiaDecay::SandiaDecayDataBase,
                    path: *const root::std::string,
                ) -> bool;
            }
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay8database23try_init_database_bytesEPNS_4UnitEPNS_9ExceptionEPN11SandiaDecay19SandiaDecayDataBaseERSt6vectorIcSaIcEE"]
                pub fn try_init_database_bytes(
                    out: *mut root::sdecay::Unit,
                    error: *mut root::sdecay::Exception,
                    database: *mut root::SandiaDecay::SandiaDecayDataBase,
                    data: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                ) -> bool;
            }
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay8database12decay_singleEPSt6vectorIN11SandiaDecay19NuclideActivityPairESaIS3_EEPKNS2_7NuclideEdd"]
                pub fn decay_single(
                    out: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                    parent: *const root::SandiaDecay::Nuclide,
                    original_activity: f64,
                    time_in_seconds: f64,
                );
            }
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay8database11decay_atomsEPSt6vectorIN11SandiaDecay19NuclideActivityPairESaIS3_EERKS1_INS2_19NuclideNumAtomsPairESaIS7_EEd"]
                pub fn decay_atoms(
                    out: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                    parents: *const root::__BindgenOpaqueArray<u64, 3usize>,
                    time: f64,
                );
            }
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay8database16decay_activitiesEPSt6vectorIN11SandiaDecay19NuclideActivityPairESaIS3_EERKS5_d"]
                pub fn decay_activities(
                    out: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                    parents: *const root::__BindgenOpaqueArray<u64, 3usize>,
                    time: f64,
                );
            }
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay8database23decay_activities_assignERSt6vectorIN11SandiaDecay19NuclideActivityPairESaIS3_EEd"]
                pub fn decay_activities_assign(
                    parents: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                    time: f64,
                );
            }
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay8database16evolution_singleEPSt6vectorIN11SandiaDecay20NuclideTimeEvolutionESaIS3_EEPKNS2_7NuclideEd"]
                pub fn evolution_single(
                    out: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                    parent: *const root::SandiaDecay::Nuclide,
                    original_activity: f64,
                );
            }
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay8database15evolution_atomsEPSt6vectorIN11SandiaDecay20NuclideTimeEvolutionESaIS3_EERKS1_INS2_19NuclideNumAtomsPairESaIS7_EE"]
                pub fn evolution_atoms(
                    out: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                    parents: *const root::__BindgenOpaqueArray<u64, 3usize>,
                );
            }
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay8database20evolution_activitiesEPSt6vectorIN11SandiaDecay20NuclideTimeEvolutionESaIS3_EERKS1_INS2_19NuclideActivityPairESaIS7_EE"]
                pub fn evolution_activities(
                    out: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                    parents: *const root::__BindgenOpaqueArray<u64, 3usize>,
                );
            }
        }
        pub mod nuclide {
            #[allow(unused_imports)]
            use self::super::super::super::root;
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay7nuclide11descendantsEPSt6vectorIPKN11SandiaDecay7NuclideESaIS5_EES5_"]
                pub fn descendants(
                    out: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                    self_: *const root::SandiaDecay::Nuclide,
                );
            }
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay7nuclide11forebearersEPSt6vectorIPKN11SandiaDecay7NuclideESaIS5_EES5_"]
                pub fn forebearers(
                    out: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                    self_: *const root::SandiaDecay::Nuclide,
                );
            }
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay7nuclide17human_str_summaryEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKN11SandiaDecay7NuclideE"]
                pub fn human_str_summary(
                    out: *mut root::std::string,
                    self_: *const root::SandiaDecay::Nuclide,
                );
            }
        }
        pub mod nuclide_mixture {
            #[allow(unused_imports)]
            use self::super::super::super::root;
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay15nuclide_mixture8activityEPSt6vectorIN11SandiaDecay19NuclideActivityPairESaIS3_EEPKNS2_14NuclideMixtureEd"]
                pub fn activity(
                    out: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                    self_: *const root::SandiaDecay::NuclideMixture,
                    time: f64,
                );
            }
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay15nuclide_mixture10try_gammasEPSt6vectorIN11SandiaDecay14EnergyRatePairESaIS3_EEPNS_9ExceptionEPKNS2_14NuclideMixtureEdNS9_10HowToOrderEb"]
                pub fn try_gammas(
                    out: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                    error: *mut root::sdecay::Exception,
                    mixture: *const root::SandiaDecay::NuclideMixture,
                    time: f64,
                    ordering: root::SandiaDecay::NuclideMixture_HowToOrder::Type,
                    include_annihillations: bool,
                ) -> bool;
            }
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay15nuclide_mixture10try_alphasEPSt6vectorIN11SandiaDecay14EnergyRatePairESaIS3_EEPNS_9ExceptionEPKNS2_14NuclideMixtureEdNS9_10HowToOrderE"]
                pub fn try_alphas(
                    out: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                    error: *mut root::sdecay::Exception,
                    mixture: *const root::SandiaDecay::NuclideMixture,
                    time: f64,
                    ordering: root::SandiaDecay::NuclideMixture_HowToOrder::Type,
                ) -> bool;
            }
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay15nuclide_mixture9try_betasEPSt6vectorIN11SandiaDecay14EnergyRatePairESaIS3_EEPNS_9ExceptionEPKNS2_14NuclideMixtureEdNS9_10HowToOrderE"]
                pub fn try_betas(
                    out: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                    error: *mut root::sdecay::Exception,
                    mixture: *const root::SandiaDecay::NuclideMixture,
                    time: f64,
                    ordering: root::SandiaDecay::NuclideMixture_HowToOrder::Type,
                ) -> bool;
            }
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay15nuclide_mixture15try_betaPlussesEPSt6vectorIN11SandiaDecay14EnergyRatePairESaIS3_EEPNS_9ExceptionEPKNS2_14NuclideMixtureEdNS9_10HowToOrderE"]
                pub fn try_betaPlusses(
                    out: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                    error: *mut root::sdecay::Exception,
                    mixture: *const root::SandiaDecay::NuclideMixture,
                    time: f64,
                    ordering: root::SandiaDecay::NuclideMixture_HowToOrder::Type,
                ) -> bool;
            }
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay15nuclide_mixture17try_decayParticleEPSt6vectorIN11SandiaDecay14EnergyRatePairESaIS3_EEPNS_9ExceptionEPKNS2_14NuclideMixtureEdNS2_11ProductTypeENS9_10HowToOrderE"]
                pub fn try_decayParticle(
                    out: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                    error: *mut root::sdecay::Exception,
                    mixture: *const root::SandiaDecay::NuclideMixture,
                    time: f64,
                    type_: root::SandiaDecay::ProductType::Type,
                    ordering: root::SandiaDecay::NuclideMixture_HowToOrder::Type,
                ) -> bool;
            }
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay15nuclide_mixture28try_decayParticlesInIntervalEPSt6vectorIN11SandiaDecay15EnergyCountPairESaIS3_EEPNS_9ExceptionEPKNS2_14NuclideMixtureEddNS2_11ProductTypeENS9_10HowToOrderEm"]
                pub fn try_decayParticlesInInterval(
                    out: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                    error: *mut root::sdecay::Exception,
                    mixture: *const root::SandiaDecay::NuclideMixture,
                    initial_age: f64,
                    interval_duration: f64,
                    type_: root::SandiaDecay::ProductType::Type,
                    sort_type: root::SandiaDecay::NuclideMixture_HowToOrder::Type,
                    characteristic_time_slices: usize,
                ) -> bool;
            }
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay15nuclide_mixture26try_decayPhotonsInIntervalEPSt6vectorIN11SandiaDecay15EnergyCountPairESaIS3_EEPNS_9ExceptionEPKNS2_14NuclideMixtureEddNS9_10HowToOrderEm"]
                pub fn try_decayPhotonsInInterval(
                    out: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                    error: *mut root::sdecay::Exception,
                    mixture: *const root::SandiaDecay::NuclideMixture,
                    initial_age: f64,
                    interval_duration: f64,
                    sort_type: root::SandiaDecay::NuclideMixture_HowToOrder::Type,
                    characteristic_time_slices: usize,
                ) -> bool;
            }
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay15nuclide_mixture25try_decayGammasInIntervalEPSt6vectorIN11SandiaDecay15EnergyCountPairESaIS3_EEPNS_9ExceptionEPKNS2_14NuclideMixtureEddbNS9_10HowToOrderEm"]
                pub fn try_decayGammasInInterval(
                    out: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                    error: *mut root::sdecay::Exception,
                    mixture: *const root::SandiaDecay::NuclideMixture,
                    initial_age: f64,
                    interval_duration: f64,
                    includeAnnihilation: bool,
                    sort_type: root::SandiaDecay::NuclideMixture_HowToOrder::Type,
                    characteristic_time_slices: usize,
                ) -> bool;
            }
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay15nuclide_mixture9try_xraysEPSt6vectorIN11SandiaDecay14EnergyRatePairESaIS3_EEPNS_9ExceptionEPKNS2_14NuclideMixtureEdNS9_10HowToOrderE"]
                pub fn try_xrays(
                    out: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                    error: *mut root::sdecay::Exception,
                    mixture: *const root::SandiaDecay::NuclideMixture,
                    time: f64,
                    ordering: root::SandiaDecay::NuclideMixture_HowToOrder::Type,
                ) -> bool;
            }
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay15nuclide_mixture11try_photonsEPSt6vectorIN11SandiaDecay14EnergyRatePairESaIS3_EEPNS_9ExceptionEPKNS2_14NuclideMixtureEdNS9_10HowToOrderE"]
                pub fn try_photons(
                    out: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                    error: *mut root::sdecay::Exception,
                    mixture: *const root::SandiaDecay::NuclideMixture,
                    time: f64,
                    ordering: root::SandiaDecay::NuclideMixture_HowToOrder::Type,
                ) -> bool;
            }
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay15nuclide_mixture8numAtomsEPSt6vectorIN11SandiaDecay19NuclideNumAtomsPairESaIS3_EEPKNS2_14NuclideMixtureEd"]
                pub fn numAtoms(
                    out: *mut root::__BindgenOpaqueArray<u64, 3usize>,
                    self_: *const root::SandiaDecay::NuclideMixture,
                    time: f64,
                );
            }
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay15nuclide_mixture4infoEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKN11SandiaDecay14NuclideMixtureEd"]
                pub fn info(
                    out: *mut root::std::string,
                    self_: *const root::SandiaDecay::NuclideMixture,
                    time: f64,
                );
            }
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay15nuclide_mixture20try_activity_nuclideEPdPNS_9ExceptionEPKN11SandiaDecay14NuclideMixtureEdPKNS4_7NuclideE"]
                pub fn try_activity_nuclide(
                    out: *mut f64,
                    error: *mut root::sdecay::Exception,
                    mixture: *const root::SandiaDecay::NuclideMixture,
                    time: f64,
                    nuclide: *const root::SandiaDecay::Nuclide,
                ) -> bool;
            }
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay15nuclide_mixture19try_activity_symbolEPdPNS_9ExceptionEPKN11SandiaDecay14NuclideMixtureEdRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"]
                pub fn try_activity_symbol(
                    out: *mut f64,
                    error: *mut root::sdecay::Exception,
                    mixture: *const root::SandiaDecay::NuclideMixture,
                    time: f64,
                    symbol: *const root::std::string,
                ) -> bool;
            }
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay15nuclide_mixture16try_activity_numEPdPNS_9ExceptionEPKN11SandiaDecay14NuclideMixtureEdiii"]
                pub fn try_activity_num(
                    out: *mut f64,
                    error: *mut root::sdecay::Exception,
                    mixture: *const root::SandiaDecay::NuclideMixture,
                    time: f64,
                    z: ::core::ffi::c_int,
                    atomic_mass: ::core::ffi::c_int,
                    iso: ::core::ffi::c_int,
                ) -> bool;
            }
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay15nuclide_mixture17try_atoms_nuclideEPdPNS_9ExceptionEPKN11SandiaDecay14NuclideMixtureEdPKNS4_7NuclideE"]
                pub fn try_atoms_nuclide(
                    out: *mut f64,
                    error: *mut root::sdecay::Exception,
                    mixture: *const root::SandiaDecay::NuclideMixture,
                    time: f64,
                    nuclide: *const root::SandiaDecay::Nuclide,
                ) -> bool;
            }
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay15nuclide_mixture16try_atoms_symbolEPdPNS_9ExceptionEPKN11SandiaDecay14NuclideMixtureEdRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"]
                pub fn try_atoms_symbol(
                    out: *mut f64,
                    error: *mut root::sdecay::Exception,
                    mixture: *const root::SandiaDecay::NuclideMixture,
                    time: f64,
                    symbol: *const root::std::string,
                ) -> bool;
            }
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay15nuclide_mixture13try_atoms_numEPdPNS_9ExceptionEPKN11SandiaDecay14NuclideMixtureEdiii"]
                pub fn try_atoms_num(
                    out: *mut f64,
                    error: *mut root::sdecay::Exception,
                    mixture: *const root::SandiaDecay::NuclideMixture,
                    time: f64,
                    z: ::core::ffi::c_int,
                    atomic_mass: ::core::ffi::c_int,
                    iso: ::core::ffi::c_int,
                ) -> bool;
            }
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay15nuclide_mixture28try_addAgedNuclideByActivityEPNS_4UnitEPNS_9ExceptionEPN11SandiaDecay14NuclideMixtureEPKNS5_7NuclideEdd"]
                pub fn try_addAgedNuclideByActivity(
                    out: *mut root::sdecay::Unit,
                    error: *mut root::sdecay::Exception,
                    mixture: *mut root::SandiaDecay::NuclideMixture,
                    nuclide: *const root::SandiaDecay::Nuclide,
                    activity: f64,
                    age_in_seconds: f64,
                ) -> bool;
            }
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay15nuclide_mixture28try_addAgedNuclideByNumAtomsEPNS_4UnitEPNS_9ExceptionEPN11SandiaDecay14NuclideMixtureEPKNS5_7NuclideEdd"]
                pub fn try_addAgedNuclideByNumAtoms(
                    out: *mut root::sdecay::Unit,
                    error: *mut root::sdecay::Exception,
                    mixture: *mut root::SandiaDecay::NuclideMixture,
                    nuclide: *const root::SandiaDecay::Nuclide,
                    number_atoms: f64,
                    age_in_seconds: f64,
                ) -> bool;
            }
        }
        pub mod transition {
            #[allow(unused_imports)]
            use self::super::super::super::root;
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay10transition17human_str_summaryEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKN11SandiaDecay10TransitionE"]
                pub fn human_str_summary(
                    out: *mut root::std::string,
                    self_: *const root::SandiaDecay::Transition,
                );
            }
        }
        pub mod rad_particle {
            #[allow(unused_imports)]
            use self::super::super::super::root;
            unsafe extern "C" {
                #[link_name = "\u{1}_ZN6sdecay12rad_particle17human_str_summaryEPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEPKN11SandiaDecay11RadParticleE"]
                pub fn human_str_summary(
                    out: *mut root::std::string,
                    self_: *const root::SandiaDecay::RadParticle,
                );
            }
        }
        pub mod layout {
            #[allow(unused_imports)]
            use self::super::super::super::root;
            pub mod std_string {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout10std_string4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout10std_string5alignE"]
                    pub static align: usize;
                }
            }
            pub mod database {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout8database4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout8database5alignE"]
                    pub static align: usize;
                }
            }
            pub mod mixture {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout7mixture4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout7mixture5alignE"]
                    pub static align: usize;
                }
            }
            pub mod string {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout6string4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout6string5alignE"]
                    pub static align: usize;
                }
            }
            pub mod nuclide {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout7nuclide4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout7nuclide5alignE"]
                    pub static align: usize;
                }
            }
            pub mod transition {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout10transition4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout10transition5alignE"]
                    pub static align: usize;
                }
            }
            pub mod rad_particle {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout12rad_particle4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout12rad_particle5alignE"]
                    pub static align: usize;
                }
            }
            pub mod nuclide_abundance_pair {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout22nuclide_abundance_pair4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout22nuclide_abundance_pair5alignE"]
                    pub static align: usize;
                }
            }
            pub mod nuclide_activity_pair {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout21nuclide_activity_pair4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout21nuclide_activity_pair5alignE"]
                    pub static align: usize;
                }
            }
            pub mod nuclide_num_atoms_pair {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout22nuclide_num_atoms_pair4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout22nuclide_num_atoms_pair5alignE"]
                    pub static align: usize;
                }
            }
            pub mod energy_intensity_pair {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout21energy_intensity_pair4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout21energy_intensity_pair5alignE"]
                    pub static align: usize;
                }
            }
            pub mod energy_count_pair {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout17energy_count_pair4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout17energy_count_pair5alignE"]
                    pub static align: usize;
                }
            }
            pub mod energy_rate_pair {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout16energy_rate_pair4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout16energy_rate_pair5alignE"]
                    pub static align: usize;
                }
            }
            pub mod element {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout7element4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout7element5alignE"]
                    pub static align: usize;
                }
            }
            pub mod time_evolution_term {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout19time_evolution_term4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout19time_evolution_term5alignE"]
                    pub static align: usize;
                }
            }
            pub mod nuclide_time_evolution {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout22nuclide_time_evolution4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout22nuclide_time_evolution5alignE"]
                    pub static align: usize;
                }
            }
            pub mod char_vec {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout8char_vec4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout8char_vec5alignE"]
                    pub static align: usize;
                }
            }
            pub mod transition_vec {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout14transition_vec4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout14transition_vec5alignE"]
                    pub static align: usize;
                }
            }
            pub mod transition_ptr_vec {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout18transition_ptr_vec4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout18transition_ptr_vec5alignE"]
                    pub static align: usize;
                }
            }
            pub mod rad_particle_vec {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout16rad_particle_vec4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout16rad_particle_vec5alignE"]
                    pub static align: usize;
                }
            }
            pub mod nuclide_abundance_pair_vec {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout26nuclide_abundance_pair_vec4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout26nuclide_abundance_pair_vec5alignE"]
                    pub static align: usize;
                }
            }
            pub mod nuclide_activity_pair_vec {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout25nuclide_activity_pair_vec4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout25nuclide_activity_pair_vec5alignE"]
                    pub static align: usize;
                }
            }
            pub mod nuclide_num_atoms_pair_vec {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout26nuclide_num_atoms_pair_vec4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout26nuclide_num_atoms_pair_vec5alignE"]
                    pub static align: usize;
                }
            }
            pub mod energy_intensity_pair_vec {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout25energy_intensity_pair_vec4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout25energy_intensity_pair_vec5alignE"]
                    pub static align: usize;
                }
            }
            pub mod energy_count_pair_vec {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout21energy_count_pair_vec4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout21energy_count_pair_vec5alignE"]
                    pub static align: usize;
                }
            }
            pub mod energy_rate_pair_vec {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout20energy_rate_pair_vec4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout20energy_rate_pair_vec5alignE"]
                    pub static align: usize;
                }
            }
            pub mod nuclide_vec {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout11nuclide_vec4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout11nuclide_vec5alignE"]
                    pub static align: usize;
                }
            }
            pub mod nuclide_ref_vec {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout15nuclide_ref_vec4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout15nuclide_ref_vec5alignE"]
                    pub static align: usize;
                }
            }
            pub mod nuclide_raw_ptr_vec {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout19nuclide_raw_ptr_vec4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout19nuclide_raw_ptr_vec5alignE"]
                    pub static align: usize;
                }
            }
            pub mod element_vec {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout11element_vec4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout11element_vec5alignE"]
                    pub static align: usize;
                }
            }
            pub mod element_raw_ptr_vec {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout19element_raw_ptr_vec4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout19element_raw_ptr_vec5alignE"]
                    pub static align: usize;
                }
            }
            pub mod element_ref_vec {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout15element_ref_vec4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout15element_ref_vec5alignE"]
                    pub static align: usize;
                }
            }
            pub mod coincidence_pair_vec {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout20coincidence_pair_vec4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout20coincidence_pair_vec5alignE"]
                    pub static align: usize;
                }
            }
            pub mod time_evolution_term_vec {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout23time_evolution_term_vec4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout23time_evolution_term_vec5alignE"]
                    pub static align: usize;
                }
            }
            pub mod nuclide_time_evolution_vec {
                #[allow(unused_imports)]
                use self::super::super::super::super::root;
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout26nuclide_time_evolution_vec4sizeE"]
                    pub static size: usize;
                }
                unsafe extern "C" {
                    #[link_name = "\u{1}_ZN6sdecay6layout26nuclide_time_evolution_vec5alignE"]
                    pub static align: usize;
                }
            }
        }
    }
}
